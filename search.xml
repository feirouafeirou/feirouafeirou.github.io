<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript 基础语法 2</title>
      <link href="/archives/cf0fa0d2.html"/>
      <url>/archives/cf0fa0d2.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript 基础语法 2"><a href="#JavaScript 基础语法 2" class="headerlink" title="JavaScript 基础语法 2"></a>JavaScript 基础语法 2</h1><blockquote><p>这篇笔记主要讲了 JavaScript 运算符，流程控制语句 (if else switch)，循环语句和数组<br> 这篇笔记因为有很多地方都是学过的所以记得不是很详细，推荐有其他语言基础的来观看 <br> 这篇笔记是初学者写下的笔记，如有错误，欢迎前来指正</p></blockquote><a id="more"></a><h2 id="JavaScript 运算符"><a href="#JavaScript 运算符" class="headerlink" title="JavaScript 运算符"></a>JavaScript 运算符</h2><ul><li><p>正常的加(+) 减(-) 乘(*) 除(/) 取余(%)</p></li><li><p>浮点数计算时会出现误差！</p><ul><li>例如：</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0.1</span> + <span class="number">0.2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(num == <span class="number">0.3</span>);</span><br><span class="line"><span class="comment">// 输出结果 false</span></span><br></pre></td></tr></table></figure><h3 id="自增自减运算符"><a href="# 自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><ul><li>自增运算符(x++,++x)，自减运算符(x–,–x)</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">++a;</span><br><span class="line"><span class="comment">// a = 11</span></span><br></pre></td></tr></table></figure><ul><li>注意前置和后置的区别</li></ul><h3 id="比较运算符"><a href="# 比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><ul><li><p>包括小于号 (&lt;)，大于号 (&gt;)，大于等于 (&gt;=)，小于等于 (&lt;=)，等于 (==)，不等于 (!=)，全等, 不全等 (===,!==)</p></li><li><p>注意：== 会转换数据类型</p></li><li><p>全等 === 不全等 !== 要求值和数据类型完全相等才为 true</p><ul><li>代码示例</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">18</span> == <span class="string">'18'</span>);</span><br><span class="line"><span class="comment">// 结果为 true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">18</span> === <span class="string">'18'</span>);</span><br><span class="line"><span class="comment">// 结果为 false</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="# 逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul><li><p>包括与 (&amp;&amp;)，或 (||)，非 (!)</p></li><li><p>与：一假则假，全真才真</p></li><li><p>或：一真则真，全假才假</p></li></ul><h4 id="短路运算"><a href="# 短路运算" class="headerlink" title="短路运算"></a>短路运算</h4><ul><li><strong>和其他语言不一样的地方</strong> (和 python 一样)</li><li>逻辑与 (&amp;&amp;) 如果表达式 1 为 true，则返回表达式 2，如果表达式 1 为假，则返回表达式 1</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span> &amp;&amp; <span class="number">456</span>);</span><br><span class="line"><span class="comment">// 输出 456</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> &amp;&amp; <span class="number">456</span>);</span><br><span class="line"><span class="comment">// 输出 0</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> &amp;&amp; <span class="number">2</span> &amp;&amp; <span class="number">3</span>);</span><br><span class="line"><span class="comment">// 输出 3</span></span><br></pre></td></tr></table></figure><ul><li>逻辑或 (||) 如果表达式 1 为 true 返回表达式 1. 如果表达式 1 为假，返回表达式 2</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span> || <span class="number">456</span>);</span><br><span class="line"><span class="comment">// 输出 123</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> || <span class="number">456</span>);</span><br><span class="line"><span class="comment">// 输出 456</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> || <span class="number">2</span> || <span class="number">3</span>);</span><br><span class="line"><span class="comment">// 输出 1</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="# 赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><ul><li>包括等号 (=)，加等 (+=)，减等 (-=)，乘等(*=) ，除等(/=) ， 取模等 (%=)</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="number">0</span>;</span><br><span class="line">test += <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 上下两句话相等</span></span><br><span class="line">test = test + <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="运算符优先级"><a href="# 运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><ul><li><p>运算符 <a href="https://blog.csdn.nethhs49707555/article/details/77618874" target="_blank" rel="external nofollow noopener noreferrer"> 优先级表</a></p></li><li><p>注意：与 (&amp;&amp;) 的优先级高于或(||)</p></li></ul><h2 id="流程控制"><a href="# 流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ul><li>包括 if，switch，三元表达式</li></ul><h3 id="if 关键字"><a href="#if 关键字" class="headerlink" title="if 关键字"></a>if 关键字</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>加入 else</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行语句 1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 执行语句 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>加入 else if</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">10</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行语句 1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行语句 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 执行语句 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三元表达式"><a href="# 三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断两个数字的大小</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span> , b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a &gt; b ? a : b);</span><br><span class="line"><span class="comment">// 输出 2</span></span><br></pre></td></tr></table></figure><h3 id="switch 语句"><a href="#switch 语句" class="headerlink" title="switch 语句"></a>switch 语句</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式) &#123;</span><br><span class="line">    <span class="keyword">case</span> value1:</span><br><span class="line">        执行语句<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> value2:</span><br><span class="line">        执行语句<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        执行最后的语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch 里的表达式和 case 里面的值必须是全等 (===)</li></ul><h4 id="switch 和 if-else-if 区别"><a href="#switch 和 if-else-if 区别" class="headerlink" title="switch 和 if else if 区别"></a>switch 和 if else if 区别</h4><ul><li>分支少时 if else 效率更高</li><li>分支多时 switch 效率更高</li></ul><h2 id="循环"><a href="# 循环" class="headerlink" title="循环"></a>循环</h2><ul><li>包括 for 循环，while 循环，do…while 循环</li><li>同样包含关键字 continue break</li></ul><h3 id="for 循环"><a href="#for 循环" class="headerlink" title="for 循环"></a>for 循环</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>;i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出 1 到 10</span></span><br></pre></td></tr></table></figure><h4 id="断点调试"><a href="# 断点调试" class="headerlink" title="断点调试"></a>断点调试</h4><ul><li><p>在 F12 里面的 Sourse</p></li><li><p>在行数上单击一下就会打一个断点</p></li><li><p>然后按 F5 刷新</p></li><li><p>按 F11 是下一步</p></li><li><p>就可以观察到程序运行的过程了</p></li><li><p>把鼠标放到变量上就可以实时看见变量的值 (或者使用 watch)</p></li></ul><h3 id="while 循环"><a href="#while 循环" class="headerlink" title="while 循环"></a>while 循环</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件表达式) &#123;</span><br><span class="line">    <span class="comment">// 循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do…while 循环"><a href="#do…while 循环" class="headerlink" title="do…while 循环"></a>do…while 循环</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 循环体</span></span><br><span class="line">&#125; <span class="keyword">while</span> (条件表达式)</span><br></pre></td></tr></table></figure><ul><li>注意：while 后面没有分号</li></ul><h2 id="JavaScript 数组"><a href="#JavaScript 数组" class="headerlink" title="JavaScript 数组"></a>JavaScript 数组</h2><ul><li>在数组里面可以放任意类型的数据 (可以混合存放)</li><li>typeof 返回的数据类型是 object</li><li>两种方式: new 创建数组, 直接创建数组</li></ul><h3 id="new 创建数组"><a href="#new 创建数组" class="headerlink" title="new 创建数组"></a>new 创建数组</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="直接创建数组"><a href="# 直接创建数组" class="headerlink" title="直接创建数组"></a>直接创建数组</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure><h3 id="访问数组元素"><a href="# 访问数组元素" class="headerlink" title="访问数组元素"></a>访问数组元素</h3><ul><li><p>可以直接用 log 输出所有元素</p></li><li><p>如果输出一个没有定义的数组元素，会输出 undefined</p></li></ul><h3 id="数组实例：冒泡排序法"><a href="# 数组实例：冒泡排序法" class="headerlink" title="数组实例：冒泡排序法"></a>数组实例：冒泡排序法</h3><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">99</span>, <span class="number">64</span>, <span class="number">54</span>, <span class="number">34</span>, <span class="number">82</span>, <span class="number">64</span>, <span class="number">24</span>, <span class="number">9</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">        temp = arr[j];</span><br><span class="line">        arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">        arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="数组新增元素"><a href="# 数组新增元素" class="headerlink" title="数组新增元素"></a>数组新增元素</h3><ul><li>修改 length 属性实现数组扩容</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.length = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="comment">// 会输出有两个 empty</span></span><br><span class="line"><span class="comment">// 直接输出空的部分会输出 undefined</span></span><br></pre></td></tr></table></figure><ul><li>修改索引号实现数组扩容</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="comment">// 可以实现增加</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 基础语法 1</title>
      <link href="/archives/5606f168.html"/>
      <url>/archives/5606f168.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript 基础语法 1"><a href="#JavaScript 基础语法 1" class="headerlink" title="JavaScript 基础语法 1"></a>JavaScript 基础语法 1</h1><blockquote><p>这篇主要讲了 JavaScript 的基础知识和变量和数据类型 <br> 这是初学者写下的笔记，如有错误，欢迎前来指正！</p></blockquote><a id="more"></a><ul><li>JavaScript 不再是标记语言啦，是一个编程语言！</li></ul><h2 id="JavaScript-Hello-World"><a href="#JavaScript-Hello-World" class="headerlink" title="JavaScript Hello World"></a>JavaScript Hello World</h2><ul><li>代码示例：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  alert(<span class="string">'Hello World'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="初识 JavaScript"><a href="# 初识 JavaScript" class="headerlink" title="初识 JavaScript"></a>初识 JavaScript</h2><blockquote><p>创始人 Brendan Eich<br>和 Java 完全没有关系 (和 Java 同属于 sun 公司)</p></blockquote><ul><li><p>JavaScript 是脚本语言</p></li><li><p>JavaScript 不需要编译器编译，由浏览器直接解释</p></li><li><p>最初是判断密码强度的</p></li><li><p>JavaScript 组成</p><ul><li>ECMAScript：JavaScript 语法</li><li>DOM：文档对象模型</li><li>BOM：浏览器对象模型</li></ul></li></ul><h3 id="JavaScript 书写位置"><a href="#JavaScript 书写位置" class="headerlink" title="JavaScript 书写位置"></a>JavaScript 书写位置</h3><ul><li><p>行内式 js：在标签内加入属性</p></li><li><p>内嵌式的 js：在 script 标签里写 js 代码</p></li><li><p>外部 js：新建一个 js 文件，然后用 <code>&lt;script src=&quot;xx.js&quot;&gt;&lt;/script&gt;</code> 引入</p><ul><li><span style="background-color: yellow;"> 引入外部 JS 文件时在两个标签之间不允许写代码 </span></li></ul></li><li><p>小知识：在 js 中推荐使用单引号</p></li></ul><h3 id="JavaScript 注释"><a href="#JavaScript 注释" class="headerlink" title="JavaScript 注释"></a>JavaScript 注释</h3><ul><li>代码示例：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 多行</span></span><br><span class="line"><span class="comment">   注释 */</span></span><br></pre></td></tr></table></figure><ul><li>单行注释快捷键 Ctrl + /</li><li>多行注释快捷键 Shift + alt + a</li></ul><h3 id="JavaScript 输入输出语句"><a href="#JavaScript 输入输出语句" class="headerlink" title="JavaScript 输入输出语句"></a>JavaScript 输入输出语句</h3><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>alert(‘msg’)</td><td>浏览器弹出警示框</td></tr><tr><td>console.log(‘msg’)</td><td>浏览器控制台打印输出消息</td></tr><tr><td>prompt(‘info’)</td><td>浏览器弹出输入框，用户可以输入</td></tr></tbody></table><ul><li>代码示例：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 输入框</span></span></span><br><span class="line"><span class="actionscript">  prompt(<span class="string">'请输入'</span>);</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 警示框</span></span></span><br><span class="line"><span class="actionscript">  alert(<span class="string">'输出为'</span>);</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 控制台输出</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(<span class="string">'程序猿才能看到'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>console.log 在 F12 里的 Console 可以看到</li></ul><h2 id="JavaScript 变量"><a href="#JavaScript 变量" class="headerlink" title="JavaScript 变量"></a>JavaScript 变量</h2><ul><li>变量：存储数据的容器</li></ul><h3 id="变量的使用"><a href="# 变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><ul><li>声明变量和赋值：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个 age 变量</span></span><br><span class="line"><span class="keyword">var</span> age;</span><br><span class="line">age = <span class="number">18</span>;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'菜鸟小铭'</span>;</span><br><span class="line"><span class="comment">// 声明多个变量</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'菜鸟小铭'</span> , age = <span class="string">'18'</span>;</span><br></pre></td></tr></table></figure><ul><li>var 关键字 (variable 变量) ，用来声明变量</li><li>声明多个变量时用逗号隔开</li><li>未赋值的变量默认值是 undefined<ul><li>未赋值直接使用会报错” xx is not defined “</li></ul></li><li>变量不声明可以直接使用 (前提条件必须要赋值) 不推荐</li></ul><h4 id="变量实例"><a href="# 变量实例" class="headerlink" title="变量实例"></a>变量实例</h4><ul><li>让用户输入并且在页面上输出</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myname;</span><br><span class="line">myname=prompt(<span class="string">'请输入名字'</span>);</span><br><span class="line">alert(<span class="string">'欢迎您'</span>+name);</span><br><span class="line"><span class="comment">// 可以使用 + 作为字符串连接</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript 变量命名规范"><a href="#JavaScript 变量命名规范" class="headerlink" title="JavaScript 变量命名规范"></a>JavaScript 变量命名规范</h3><ul><li><p>字母数字 _ 和 $ 符号 (和 Java 命名一样)</p></li><li><p>大小写敏感</p></li><li><p>小驼峰式命名</p></li><li><p><span style="background: yellow;">不要用 name 做变量名 (因为 name 在浏览器里面有含义)</span></p></li><li><p>name 在浏览器中本身就已经被定义了</p></li></ul><h2 id="JavaScript 数据类型"><a href="#JavaScript 数据类型" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h2><ul><li><span style="background: yellow;">JavaScript 是弱类型语言，类型在运行时会被自动确定</span></li><li>变量的数据类型可以变化 (例如声明一个变量等于 1，后面可以将一个字符串付给这个变量)</li></ul><h3 id="简单数据类型"><a href="# 简单数据类型" class="headerlink" title="简单数据类型"></a>简单数据类型</h3><table><thead><tr><th>数据类型</th><th>默认值</th></tr></thead><tbody><tr><td>Number(数字)</td><td>0</td></tr><tr><td>Boolean(布尔型)</td><td>false</td></tr><tr><td>String(字符串)</td><td>“”</td></tr><tr><td>Undefined(未定义的变量)</td><td>undefined</td></tr><tr><td>Null(空)</td><td>null</td></tr></tbody></table><h4 id="数字 -Number"><a href="# 数字 -Number" class="headerlink" title="数字 (Number)"></a> 数字(Number)</h4><ul><li><p>包括整数和小数</p></li><li><p>八进制：var num = 010; (十进制的 8) <span style="background: yellow;">程序里面数字前面加 0 表示八进制</span></p></li><li><p>十六进制：var num = 0xa; (十进制的 10) <span style="background: yellow;">程序里面数字前面加 0x 表示八进制</span></p><ul><li>.MAX_VALUE 最大值, MIN_VALUE 最小值</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="built_in">Number</span>.MAX_VALUE);<span class="comment">//1.7976931348623157e+308</span></span><br><span class="line">alert(<span class="built_in">Number</span>.MIN_VALUE);<span class="comment">//5e-324</span></span><br></pre></td></tr></table></figure><ul><li><p>infinity: 无穷大 (超过 Number 的范围)</p></li><li><p>-infinity：无穷小</p></li><li><p>NaN(Not a number)：非数值 (例如一个字符串减去一个数字)</p></li><li><p>isNAN() 判断是否为非数字，是数字返回 false，非数字返回 true</p></li></ul><h4 id="字符串 -String"><a href="# 字符串 -String" class="headerlink" title="字符串 (String)"></a> 字符串(String)</h4><ul><li>单引号双引号皆可，推荐单引号</li><li>字符串的嵌套：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'菜鸟" 小铭 "学习 JavaScript'</span>;</span><br></pre></td></tr></table></figure><ul><li>转义符号 “\”, 转义字符要写在引号里面</li></ul><h5 id="字符串属性"><a href="# 字符串属性" class="headerlink" title="字符串属性"></a>字符串属性</h5><ul><li>检测字符串长度：length 属性</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'noobxiaoming'</span>;</span><br><span class="line">colsole.log(str.length);</span><br></pre></td></tr></table></figure><ul><li>字符串拼接：+</li><li>+ 会将所有的其他类型转换成字符串类型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'xiaoming'</span> , num = <span class="number">2333</span>;</span><br><span class="line">conlsole.log(str+num);</span><br><span class="line"><span class="comment">// 输出结果 xiaoming2333 (字符串型)</span></span><br></pre></td></tr></table></figure><h4 id="其他数据类型"><a href="# 其他数据类型" class="headerlink" title="其他数据类型"></a>其他数据类型</h4><ul><li><p>布尔型(Boolean)</p><ul><li>true 在参与计算时当作 1 (false 当 0)</li></ul></li><li><p>未定义的(undefined)</p><ul><li>没有赋初值的类型</li><li>undefined + 数字 = NaN</li><li>undefined + 字符串 = undefined 字符串</li></ul></li><li><p>空值(null)</p><ul><li>null + 1 = 1</li></ul></li></ul><h3 id="获取数据类型"><a href="# 获取数据类型" class="headerlink" title="获取数据类型"></a>获取数据类型</h3><ul><li>关键字：typeof</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> num);</span><br></pre></td></tr></table></figure><ul><li><p><span style="background: yellow;">在数据类型为 null 时，typeof 检测的数据为 object (对象)</span></p><ul><li>数据类型特例：</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = prompt(<span class="string">'请输入年龄'</span>);</span><br><span class="line"><span class="comment">// 这里输入 18</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> age);</span><br><span class="line"><span class="comment">// 这里输出 String 类型</span></span><br></pre></td></tr></table></figure><ul><li><span style="background: yellow;">prompt 取得的值是字符型的</span></li></ul><h4 id="通过控制台获取数据类型"><a href="# 通过控制台获取数据类型" class="headerlink" title="通过控制台获取数据类型"></a>通过控制台获取数据类型</h4><ul><li>数字型：蓝色</li><li>字符型：黑色</li><li>布尔型：深蓝色</li><li>bool 和 null：浅灰色</li></ul><h3 id="数据类型转换"><a href="# 数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换 </h3><h4 id="转换成字符串型"><a href="# 转换成字符串型" class="headerlink" title="转换成字符串型"></a> 转换成字符串型</h4><table><thead><tr><th>方式</th><th>默认值</th></tr></thead><tbody><tr><td>.toString()</td><td>转换成字符串</td></tr><tr><td>String()</td><td>强制转换成字符串</td></tr><tr><td>+</td><td><strong>拼接结果为字符串(隐式转换)</strong></td></tr></tbody></table><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">console</span>.log(num.toString());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">String</span>(num));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">''</span> + num);</span><br></pre></td></tr></table></figure><h4 id="转换成数字型"><a href="# 转换成数字型" class="headerlink" title="转换成数字型"></a>转换成数字型</h4><table><thead><tr><th>方式</th><th>默认值</th></tr></thead><tbody><tr><td>parseInt(string)</td><td>string 转换成 int</td></tr><tr><td>parseFloat(string)</td><td>string 转换成 float</td></tr><tr><td>Number()</td><td>强制转换成数值型</td></tr><tr><td>- * /</td><td>计算结果为数字（隐式转换）</td></tr></tbody></table><ul><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'2020'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(str));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(str));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(str));</span><br><span class="line"><span class="comment">// 减号方法</span></span><br><span class="line"><span class="built_in">console</span>.log(str - <span class="number">0</span>);<span class="comment">// 字符型隐式转换为数字型</span></span><br><span class="line"><span class="built_in">console</span>.log(str * <span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str / <span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str - <span class="string">'20'</span>);<span class="comment">// 结果为 2000</span></span><br></pre></td></tr></table></figure><ul><li>如果字符串里后面有单位(首个必须是数字，后面可以是字母)，parseInt 和 parseFloat 会自动把单位去掉</li><li>如果前后都有字母，parseInt 和 parseFloat 会返回 NaN</li><li>例如：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> unit = <span class="string">'120px'</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'abc123abc'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(unit));</span><br><span class="line"><span class="comment">// 输出 120</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(str));</span><br><span class="line"><span class="comment">// 输出 NaN</span></span><br></pre></td></tr></table></figure><h4 id="布尔型转换"><a href="# 布尔型转换" class="headerlink" title="布尔型转换"></a>布尔型转换</h4><ul><li>Boolean() 函数</li><li>把 ‘’，0，NaN，null，undefined 为 false</li><li>代码示例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">''</span>));</span><br><span class="line"><span class="comment">// 输出 false</span></span><br></pre></td></tr></table></figure><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104685255" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104685255</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《Head First HTML 与 CSS》3</title>
      <link href="/archives/c10fa92e.html"/>
      <url>/archives/c10fa92e.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇笔记主要介绍《Head First HTML 与 CSS》有关 CSS 入门、增加字体和盒模型的部分</p></blockquote><a id="more"></a><h1 id="CSS 入门"><a href="#CSS 入门" class="headerlink" title="CSS 入门"></a>CSS 入门 </h1><h2 id="把 CSS 放入 HTML"><a href="# 把 CSS 放入 HTML" class="headerlink" title="把 CSS 放入 HTML"></a> 把 CSS 放入 HTML</h2><ul><li>示例代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 在此处添加 css */</span></span></span><br><span class="line">        p&#123;</span><br><span class="line">            color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>CSS 书写格式</p><ul><li>在属性和相应值之间有一个冒号</li><li>最后要加一个分号</li><li>可去除换行写在一行</li><li>整个称为一个规则</li></ul></li><li><p>改变文本颜色是 color 属性，而没有 texcolor 属性</p></li><li><p>要为多个元素编写一个规则，只要在选择器之间加上逗号</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">    <span class="comment">/* 在标题下增加下划线 */</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>若用 underline 样式增加下划线，下划线只会出现在文本下边。而使用 border-buttom 的方式，下划线会延伸到页面边缘</li></ul><h2 id="通过图解研究选择器"><a href="# 通过图解研究选择器" class="headerlink" title="通过图解研究选择器"></a>通过图解研究选择器</h2><img data-src="/archives/c10fa92e/image-20200719153934588.png" class><h2 id="链接到外部样式表"><a href="# 链接到外部样式表" class="headerlink" title="链接到外部样式表"></a>链接到外部样式表</h2><ul><li>示例代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../xxx.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>rel 属性指定了 HTML 文件与所链接的文件之间的关系。要链接到一个样式表，所以使用值 stylesheet</li><li><code>&lt;link&gt;</code>是一个 void 元素，没有结束标记</li></ul><h2 id="来谈谈继承"><a href="# 来谈谈继承" class="headerlink" title="来谈谈继承"></a>来谈谈继承</h2><ul><li>元素可以从它的父元素继承样式，<label style="color:red">不是所有元素都能继承</label>，只有一部分能继承，如 font-family</li><li>继承工作原理</li></ul><img data-src="/archives/c10fa92e/image-20200719162130277.png" class><ul><li><p>若把 font-family 属性上移到<code>&lt;body&gt;</code>，那它的所有子元素都会继承这个属性</p></li><li><p>可是，如果不希望每个 <code>&lt;body&gt;</code> 的子元素都继承同样的字体属性呢？可以用一个特定的规则来 <label style="color:red"> 覆盖继承</label></p><img data-src="/archives/c10fa92e/image-20200719162905214.png" class></li><li><p>对于 css，总会使用 <code> 最特定 </code> 的那个规则，后面讨论哪个规则最特定</p></li><li><p>一般来讲，如果样式会影响你的文本外观，这样的样式都能继承，如颜色、字体。其他属性不能继承，如边框</p></li></ul><h2 id="创建一个类选择器"><a href="# 创建一个类选择器" class="headerlink" title="创建一个类选择器"></a>创建一个类选择器</h2><ul><li><p>把元素加到一个类，例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"greentea"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建一个类选择器，例</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.greentea</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><img data-src="/archives/c10fa92e/image-20200719164321079.png" class><ul><li>如果仍然没有一个明确的赢家，要使用 CSS 文件中最后列出的规则（最靠后）</li></ul><img data-src="/archives/c10fa92e/image-20200719164740026.png" class><h1 id="增加字体和颜色模式"><a href="# 增加字体和颜色模式" class="headerlink" title="增加字体和颜色模式"></a>增加字体和颜色模式</h1><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">font-family</td><td align="center">字体系列</td></tr><tr><td align="center">font-size</td><td align="center">字体大小</td></tr><tr><td align="center">color</td><td align="center">文本颜色</td></tr><tr><td align="center">font-weight</td><td align="center">字体粗细</td></tr><tr><td align="center">text-decoration</td><td align="center">文本风格</td></tr></tbody></table><h2 id="字体系列"><a href="# 字体系列" class="headerlink" title="字体系列"></a>字体系列</h2><ul><li>每个 font-family 包含一组有共同特征的字体。共有 5 个字体系列：sans-serif，serif，monospace，cursive 和 fantasy。每个字体系列都包括大量字体，在页面上看到的只是每个字体系列中很少的几个字体例子。</li></ul><h3 id="使用 CSS 指定字体系列"><a href="# 使用 CSS 指定字体系列" class="headerlink" title="使用 CSS 指定字体系列"></a>使用 CSS 指定字体系列</h3><img data-src="/archives/c10fa92e/image-20200729185643450.png" class><ul><li>利用 font-family 属性，可以创建一个首选字体列表。我们希望大多数浏览器都能有你的第一个选择，不过，如果没有，至少可以确保浏览器能提供同一个字体系列中的一个通用字体。</li><li>若字体名字有空格，则需加上双引号。</li><li>sans-serif 和 serif 字体最全面通用。</li></ul><h3 id="引入 web 字体"><a href="# 引入 web 字体" class="headerlink" title="引入 web 字体"></a>引入 web 字体</h3><ul><li><p>web 字体如何工作</p><ol><li>要利用 web 字体，浏览器首先获取一个引用这些字体的 html 页面。</li><li>浏览器在获取这个页面所需的 web 文件。</li><li>现在，获取了字体后，浏览器显示页面时就会使用这个字体。</li></ol></li><li><p>如果你只是要测试字体，实际上可以把这些字体作为本地文件，存储在你自己的文件系统中并引用（就像存储和引用本地图像一样）。不过，如果你想为 Web 上的用户提供字体，就必须把这些文件放在一个服务器上，或者利用一个托管服务，如 Google 的字体托管跟务，这是免费的。</p></li><li><p>如何为页面增加 web 字体</p><ol><li>找的一个字体</li><li>确保有所需字体的所有格式</li><li>把你的字体文件放在 web 上</li><li>在 CSS 中添加 @font-face 属性</li></ol><img data-src="/archives/c10fa92e/image-20200729191748646.png" class><p>   5. 在 CSS 中使用 font-family 名</p><p>   6. 加载页面</p></li><li><p><code>@font-face</code>是一个内置 CSS 规则，而不是一个选择器规则。其他两个常用的内置规则：<code>@import</code>允许导入其他 CSS 文件（而不是 HTML 中通过一个 <code>&lt;link&gt;</code> 链入），另外 <code>@media</code> 允许创建特定于某些“媒体”类型的 CSS 规则，如印刷页、来面屏幕或手机。</p></li><li><p>托管字体服务 <a href="http://www.fontsquirrel.com/" target="_blank" rel="external nofollow noopener noreferrer">FonsSqpird</a>   <a href="http://www.google.com/webfonts" target="_blank" rel="external nofollow noopener noreferrer">Google Web 字体服务</a></p></li></ul><h2 id="调整字体大小"><a href="# 调整字体大小" class="headerlink" title="调整字体大小"></a>调整字体大小</h2><ul><li>px 按像素明确指定字体具体大小</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>% 用百分号指定字体大小时，会相对于父元素字体大小指定这个字体有多大</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="comment">/* 相对于父元素的 150%，h1 字体大小为 21px*/</span></span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">150%</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>em 用 em 指定字体大小与百分数类似，会相对于父元素字体大小指定这个字体大小</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="comment">/* 相对于父元素的 1.2 倍，h2 字体大小为 17px*/</span></span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">1.2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>关键字 可以把一个字体大小指定为 xx-small,x-small,small,medium,large,x-large 或 xx-large, 浏览器会把这些关键字转换为像素值，它会使用浏览器中定义的默认值来完成这个转换。</li></ul><blockquote><p>那么，我到底该如何指定字体大小呢？<br>1. 选择一个关键字（推荐 small 或 medium），指定它作为 body 规则中的字体大小。这相当于页面的默认字体大小。<br>2. 使用 em 或百分数，相对于 body 字体大小指定其他元素的字体大小（选择 em 还是百分数由你决定，因为实际上这两种方法作用是一样的）。</p></blockquote><ul><li>如果没有指定自已大小，大多数情况下，浏览器默认字体大小为 16px。默认地，<code>&lt;h4&gt;</code>标题与 body 字体大小相同。</li></ul><h2 id="改变字体粗细"><a href="# 改变字体粗细" class="headerlink" title="改变字体粗细"></a>改变字体粗细</h2><ul><li><code>font-weight</code>控制文本粗细</li><li><code>font-weight:bold;</code>设置粗体</li><li><code>font-weight:normal;</code>去掉粗体样式</li><li>另外两个属性 <code>bolder</code> 和<code>lighter</code>会相对于所继承的值使文本样式稍粗一些或者稍细一些。这很少使用，因为没有多少字体支持粗细程度的细微差异，所以这两个值通常没有效果。</li><li>还可以把 font-weight 属性设置为 100 到 900 之间的一个数（100 的倍数），不过同样的，这个特性也未得到字体和浏览器的广泛支持，所以通常并不使用。</li></ul><h2 id="为字体增加风格"><a href="# 为字体增加风格" class="headerlink" title="为字体增加风格"></a>为字体增加风格</h2><ul><li>斜体风格 <code>font-style:italic;</code>或者<code>font-style:oblique;</code>。这两种风格看起来一样，除非确实非得区分斜体和倾斜文本，这对你非常重要，否则完全可以任选一种使用。</li></ul><h2 id="为字体增加颜色"><a href="# 为字体增加颜色" class="headerlink" title="为字体增加颜色"></a>为字体增加颜色</h2><ul><li><p><code>color</code>属性可以改变字体颜色。 </p></li><li><p>红绿蓝按不同比例组合成各种颜色。</p></li><li><p><strong>按颜色名指定颜色</strong>  CSS 大约定义了 150 个颜色名，如”red”、”green”、”blue”等。颜色名不区分大小写。</p></li><li><p><strong>用红绿蓝值指定颜色</strong>  </p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">80%</span>,<span class="number">40%</span>,<span class="number">0%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">204</span>,<span class="number">102</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>使用十六进制码指定颜色</strong>  每组 2 位数字分别代表红绿蓝分量，如果每一组分量中两位数字都相同，可以简写。例加，#ccbb00 可以缩写为 #cb0，或者#11eeaa 可以缩写为#1ea。不过，加果十六进制码是#ccbb10，则不能使用缩写。</li></ul><h2 id="增加文本装饰"><a href="# 增加文本装饰" class="headerlink" title="增加文本装饰"></a>增加文本装饰</h2><ul><li><code>text-decoration</code>属性可以增加文本装饰。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="comment">/* 为 &lt;em&gt; 元素添加删除线 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:line-through;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="comment">/* 一次可以设置多个装饰，为 &lt;em&gt; 元素添加下划线和上划线 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:underline overline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="comment">/* 如果文本继承了不想要的装饰，可以使用”none“来删去装饰 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>如果 <code>&lt;em&gt;</code> 有两个不同规则，一个指定上划线，一个指定下划线，它们不会累加。只有在同一个 <code>text-decoration</code> 声明中同时指定，才会得到两个装饰。</p></li><li><p>HTML 的 <code>&lt;del&gt;</code> 标签表示一些被从文档中删除的文字内容。比如可以在需要显示修改记录或者源代码差异的情况使用这个标签。这个标签通常（但不一定要）在文字上显示删除线。</p></li><li><p><code>&lt;ins&gt;</code>标签表示文档中添加的内容。这个标签通常（但不一定要）在文字上显示下划线。</p></li></ul><img data-src="/archives/c10fa92e/image-20200801110239295.png" class>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
            <tag> 《Head First HTML与CSS》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 4</title>
      <link href="/archives/f89a1bea.html"/>
      <url>/archives/f89a1bea.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 4"><a href="#HTML 与 CSS 学习 4" class="headerlink" title="HTML 与 CSS 学习 4"></a>HTML 与 CSS 学习 4</h1><blockquote><p>这篇笔记主要讲了 CSS 快捷键的使用方法，复合选择器，块元素，行内元素，CSS 背景，CSS 层叠性、继承性和优先级 <br> 这篇笔记是初学者写下的笔记，如有错误，欢迎前来指正。</p></blockquote><a id="more"></a><h2 id="Emmet 语法 - 快捷键"><a href="#Emmet 语法 - 快捷键" class="headerlink" title="Emmet 语法 (快捷键)"></a>Emmet 语法(快捷键)</h2><h3 id="快速生成 HTML 结构语法"><a href="# 快速生成 HTML 结构语法" class="headerlink" title="快速生成 HTML 结构语法"></a> 快速生成 HTML 结构语法</h3><ul><li><p>生成多个相同标签，标签名 *3 (注，中间不要有空格)</p></li><li><p>父子级标签 例：ul 和 li 可以写 ul&gt;li</p><ul><li>兄弟关系用 +</li></ul></li><li><p>可以直接 .nav ，生成<code>&lt;div class=&quot;nav&quot;&gt;&lt;/div&gt;</code></p><ul><li>. 可以换# 生成 id 标签</li><li>可以更换其他标签，例：p.one 生成<code>&lt;p class=&quot;one&quot;&gt;&lt;/p&gt;</code></li></ul></li><li><p>生成类名有顺序 .demo$*5</p><ul><li>注：$ 从 1 开始排序</li></ul></li><li><p>生成标签内容带默认文字 例：div{默认文字}</p></li></ul><blockquote><p>示例：5 个 div 标签，里面从 1 到 5，属性 class 从 demo1 到 demo5</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.demo$&#123;$&#125;*5</span><br></pre></td></tr></table></figure><h3 id="快速生成 CSS 样式语法"><a href="# 快速生成 CSS 样式语法" class="headerlink" title="快速生成 CSS 样式语法"></a>快速生成 CSS 样式语法</h3><ul><li>tac 可以快速生成<code>test-align: center;</code></li><li>基本上都是首字母 + 参数</li></ul><h3 id="快速格式化代码"><a href="# 快速格式化代码" class="headerlink" title="快速格式化代码"></a>快速格式化代码</h3><ul><li><p>快捷键 Shift+Alt+f</p></li><li><p>为了方便操作，在保存时自动格式化代码 (VScode)</p><ol><li>文件 -&gt; 首选项 -&gt; 设置</li><li>搜索 emmet.include</li><li>在 setting.json 的用户下添加下列语句</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">"editor.formatOnType":true,</span><br><span class="line">"editor.formatOnSave":true</span><br></pre></td></tr></table></figure></li></ul><h2 id="CSS 复合选择器"><a href="#CSS 复合选择器" class="headerlink" title="CSS 复合选择器"></a>CSS 复合选择器</h2><ul><li>复合选择器就是基础选择器结合而成的</li><li>包括：后代选择器，子选择器，并集选择器，伪类选择器</li></ul><h3 id="后代选择器 -※"><a href="# 后代选择器 -※" class="headerlink" title="后代选择器 ※"></a>后代选择器 ※</h3><ul><li>又称包含选择器，可以选择父元素里的子元素</li><li>例，选择所有 ol 标签里的 li 都更改属性</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="comment">/* 选择 ol 里的所有 li 元素 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>中间用空格隔开</p></li><li><p>更改的是后代的 (只要是后代都可以被选中，无论几代) 样式</p></li><li><p>对同名标签的区分</p><ul><li>对一个标签添加 class 属性</li><li>.class 属性 + 后代名</li><li>注：中间的过程标签可以省略</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">      color: pink;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>pink<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="子选择器"><a href="# 子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><ul><li>选择离得最近的子元素</li><li>元素 1&gt; 元素 2 {样式声明}</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  ul&gt;li &#123;</span><br><span class="line">      color: pink;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>会变粉 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> 不会变粉<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>元素 1 是父元素，元素 2 是子元素</li><li>只能选择离得最近的子元素(不包括几代之后的元素)</li></ul><h3 id="并集选择器 -※"><a href="# 并集选择器 -※" class="headerlink" title="并集选择器 ※"></a>并集选择器 ※</h3><ul><li>可以选择多组标签，样式相同，来集体声明</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div,</span><br><span class="line">  p &#123;</span><br><span class="line">      color: pink;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>会变粉 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 会变粉<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>用逗号隔开，逗号可以理解为和的意思</p></li><li><p>任何样式选择器都可以作为并集选择器的一部分</p></li><li><p>语法规范：并集选择器的标签要竖着写</p></li></ul><h3 id="伪类选择器"><a href="# 伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><ul><li>给选择器添加特殊效果</li><li>语法 : + 元素</li></ul><h4 id="链接伪类选择器"><a href="# 链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h4><table><thead><tr><th>属性</th><th>解释</th></tr></thead><tbody><tr><td>a:link</td><td>选择所有未被访问的链接</td></tr><tr><td>a:visited</td><td>选择所有已被访问的链接</td></tr><tr><td>a:hover</td><td>选择鼠标指针位于其上链接</td></tr><tr><td>a:active</td><td>选择活动链接 (鼠标按下未抬起的链接)</td></tr></tbody></table><blockquote><p>小知识：未选择链接经常使用的颜色 #333</p></blockquote><h4 id="链接伪类的注意事项"><a href="# 链接伪类的注意事项" class="headerlink" title="链接伪类的注意事项"></a>链接伪类的注意事项</h4><ul><li><p>为了确保生效，要按照 link-&gt;visited-&gt;hover-&gt;active 的顺序声明</p></li><li><p>链接和标题标签一样，都要单独指定样式</p></li><li><p>开发中经常的写法：</p><ul><li>先给 a 写一个样式</li><li>然后在给 hover(经过的时候)写一个样式(蓝色 + 下划线)</li></ul></li></ul><h4 id="focus 伪类选择器"><a href="#focus 伪类选择器" class="headerlink" title=":focus 伪类选择器"></a>:focus 伪类选择器</h4><ul><li>选取获得焦点 (光标) 的表单元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line">      background-color: pink;</span><br><span class="line"><span class="css">      <span class="comment">/* 谁获得了光标，就改变谁的背景色 */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS 元素显示模式"><a href="#CSS 元素显示模式" class="headerlink" title="CSS 元素显示模式"></a>CSS 元素显示模式 </h2><h3 id="元素的显示模式"><a href="# 元素的显示模式" class="headerlink" title="元素的显示模式"></a> 元素的显示模式</h3><ul><li>元素 (标签) 以什么方式显示，例如 <code>&lt;div&gt;</code> 独自占一行</li><li>分类：块元素，行内元素</li></ul><h4 id="块元素"><a href="# 块元素" class="headerlink" title="块元素"></a>块元素</h4><ul><li><p>包括：<code>&lt;h1&gt;,&lt;p&gt;,&lt;div&gt;,&lt;ul&gt;,&lt;ol&gt;,&lt;li&gt;</code>, 其中 <code>&lt;div&gt;</code> 是最典型的块元素</p></li><li><p>特点：</p><ol><li>自己独占一行</li><li>可以设置高度宽度及内外边距</li><li>宽度默认和容器 (父级宽度) 一样宽</li><li>是一个容器及盒子，里面可以放其他元素</li></ol></li><li><p>注意：文字类的块元素不允许放其他元素, 例如 <code>&lt;p&gt;</code> 和<code>&lt;h1&gt;</code></p></li></ul><h4 id="行内元素 - 内联元素"><a href="# 行内元素 - 内联元素" class="headerlink" title="行内元素 (内联元素)"></a> 行内元素(内联元素)</h4><ul><li><p>包括：<code>&lt;a&gt;,&lt;strong&gt;,&lt;body&gt;,&lt;em&gt;,&lt;span&gt;...</code></p></li><li><p>特点：</p><ol><li>一行可以显示多个行内元素</li><li>直接设置宽度高度设置无效</li><li>默认宽度为内容的宽度</li><li>行内元素，只能容纳文本或行内元素</li></ol></li><li><p>注意：</p><ol><li>链接里面不能再放链接元素</li><li>特殊链接 <code>&lt;a&gt;</code> 里面可以放块级元素，但是要给 <code>&lt;a&gt;</code> 转化一下块级模式 (下面元素模式转换有写)</li></ol></li></ul><h4 id="行内块元素"><a href="# 行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h4><ul><li><p>特殊元素：<code>&lt;img /&gt;,&lt;input /&gt;,&lt;td&gt;</code>同时具有块元素和行内元素的特点，称为行内块元素</p></li><li><p>特点：</p><ol><li>一行可以有多个行内块元素，但中间有空白缝隙</li><li>默认宽度是内容的宽度</li><li>高度，行高，外边距以及内边距都可以控制</li></ol></li></ul><h4 id="元素总结"><a href="# 元素总结" class="headerlink" title="元素总结"></a>元素总结</h4><table><thead><tr><th>元素名</th><th>特点</th></tr></thead><tbody><tr><td>块元素</td><td>可以指定大小，独占一行</td></tr><tr><td>行内元素</td><td>不能指定大小，一行可以放多个</td></tr><tr><td>行内块元素</td><td>可以指定大小，一行可以放多个，大小由内容来决定</td></tr></tbody></table><h4 id="元素显示模式的转换"><a href="# 元素显示模式的转换" class="headerlink" title="元素显示模式的转换"></a>元素显示模式的转换</h4><ul><li><p>一种元素需要另外一种元素的特性</p></li><li><p>例如增加 a 的触发范围 (使一个行内元素有块元素的性质)</p><ul><li>在 CSS 里面添加 <code>display: bolck</code> 转化块元素：</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  a &#123;</span><br><span class="line">      width: 150px;</span><br><span class="line">      height: 50px;</span><br><span class="line">      display: block;</span><br><span class="line"><span class="css">      <span class="comment">/* 这句话把 a 标签转化为块元素 */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>我是块元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 CSS 里面添加 <code>display: inline</code> 转化为行内元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div &#123;</span><br><span class="line">      display: inline;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是行内元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 CSS 里添加 <code>display: inline-block</code> 转化为行内块元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  span &#123;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 30px;</span><br><span class="line">      display: inline-block;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我既可以指定大小，又可以一行放多个<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="snipaste 工具的使用"><a href="#snipaste 工具的使用" class="headerlink" title="snipaste 工具的使用"></a>snipaste 工具的使用</h3><ul><li>一个截图工具，兼具取色的功能</li><li>F1 截图，F3 置顶，Alt 取色</li></ul><h3 id="课堂案例"><a href="# 课堂案例" class="headerlink" title="课堂案例"></a>课堂案例</h3><ul><li><p>侧边栏的效果：<br>[外链图片转存失败, 源站可能有防盗链机制, 建议将图片保存下来直接上传(img-HczfYLVF-1581249072737)(image/xiaomi_drawer.png)]</p></li><li><p>代码实现在 &lt;demo5.html&gt; 中</p></li></ul><blockquote><p>小知识：在 li 中垂直居中 <br> 只要行高和盒子高相等，然后就垂直居中了 <br> 代码 <code>line-height: 40px</code><br>行高小于盒子高度，文字会偏上 <br> 行高大于盒子高度，文字则偏下</p></blockquote><h2 id="CSS 的背景"><a href="#CSS 的背景" class="headerlink" title="CSS 的背景"></a>CSS 的背景</h2><ul><li>背景颜色，背景图片，背景平铺，背景图片位置，背景图像固定</li></ul><h3 id="背景颜色"><a href="# 背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><ul><li>定义背景颜色：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color: transparent | color;</span><br></pre></td></tr></table></figure><ul><li>transparent：背景色透明 (默认值)</li><li>color：颜色</li></ul><h3 id="背景图片"><a href="# 背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><ul><li>定义背景图片场景：logo，装饰性小图片，超大图片</li><li>优点：便于控制位置</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">background-image: none | url();</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">url</span>();</span><br><span class="line"><span class="comment">/* 不要忘记 url() */</span></span><br></pre></td></tr></table></figure><ul><li>none：无背景图 (默认值)</li><li>url()：使用绝对地址或相对地址指定图片</li></ul><h3 id="背景平铺"><a href="# 背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><ul><li>定义背景平铺：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-repeat: repeat | no-repeat | repeat-x | repeat-y;</span><br></pre></td></tr></table></figure><ul><li>repeat-x：沿 x 轴平铺(横向)</li><li>背景图片在背景颜色之上</li></ul><h3 id="背景图片位置 - 重要"><a href="# 背景图片位置 - 重要" class="headerlink" title="背景图片位置 重要"></a>背景图片位置 <strong>重要</strong></h3><ul><li>背景图片位置属性：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span>: <span class="selector-tag">x</span> <span class="selector-tag">y</span>;</span><br><span class="line"><span class="comment">/* 一共两个参数 x 和 y */</span></span><br></pre></td></tr></table></figure><p>参数表：</p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>length(精确位置)</td><td>百分数 | 由浮点数值和单位标识符 (px) 组成的长度值</td></tr><tr><td>position(方位名词)</td><td>top</td></tr></tbody></table><ul><li><p>方位名词：</p><ol><li>第一个参数是 x 轴方向，第二个参数是 y 轴方向</li><li>参数没有顺序</li><li>只声明一个参数，默认另一个为 center</li></ol></li><li><p>背景图片适合超大图片，背景图片适合水平居中</p></li></ul><h4 id="背景图片精确位置"><a href="# 背景图片精确位置" class="headerlink" title="背景图片精确位置"></a>背景图片精确位置</h4><ul><li>第一个参数为 x 坐标，第二个为 y 坐标</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span>: 20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><ul><li>只指定一个值，另一个值默认垂直居中</li><li>精确单位 (数值) 和文字单位可以混合使用，但一定要注意参数顺序</li></ul><h3 id="背景图像固定"><a href="# 背景图像固定" class="headerlink" title="背景图像固定"></a>背景图像固定</h3><ul><li>把图片固定在网页上，用来做视差滚动</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-attachment: scroll | fixed;</span><br></pre></td></tr></table></figure><ul><li>scroll：背景图像滚动 (默认值)</li><li>fixed：背景图像固定</li></ul><h3 id="背景图片复合写法"><a href="# 背景图片复合写法" class="headerlink" title="背景图片复合写法"></a>背景图片复合写法</h3><ul><li>和字体一样有复合写法，但是背景图片参数没有顺序</li><li>下面是推荐书写的顺序：</li><li>注意: 背景图片地址为：url()</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: 背景颜色 | 背景图片地址 | 背景平铺 | 背景图片滚动 | 背景图片位置 ;</span><br></pre></td></tr></table></figure><h3 id="背景色半透明"><a href="# 背景色半透明" class="headerlink" title="背景色半透明"></a>背景色半透明</h3><ul><li>代码示例</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.3</span>);</span><br></pre></td></tr></table></figure><ul><li>a 为透明度，取值范围[0,1]</li><li>可以省略透明度前面的 0，例 0.3 -&gt; .3</li></ul><h2 id="CSS 三大特性"><a href="#CSS 三大特性" class="headerlink" title="CSS 三大特性"></a>CSS 三大特性 </h2><h3 id="层叠性"><a href="# 层叠性" class="headerlink" title="层叠性"></a> 层叠性</h3><ul><li>对同一个选择器选择相同样式不同的参数：</li><li>遵循就近原则，谁离标签近就执行哪个样式 (后来者居上)，但是不冲突的部分不会被覆盖</li></ul><h3 id="继承性"><a href="# 继承性" class="headerlink" title="继承性"></a>继承性</h3><ul><li>子标签会继承父标签的某些样式(可以继承的样式 text- ,font- ,line- ,color-)</li><li>在 F12 中可以看到 inherited from xxx</li></ul><h4 id="行高的继承"><a href="# 行高的继承" class="headerlink" title="行高的继承"></a>行高的继承</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> <span class="string">"Microsoft YaHei"</span>;</span><br><span class="line">  <span class="comment">/* 字体大小 / 行高 字体 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以没有单位</li><li>没有单位的意思是当前元素文字大小的 1.5 倍</li></ul><h3 id="优先级"><a href="# 优先级" class="headerlink" title="优先级"></a>优先级</h3><ul><li>给同一个元素指定了多个选择器，就会有优先级产生</li><li>选择器相同，根据层叠性排序</li><li>权重排序：继承或 * -&gt; 元素选择器 -&gt; 类选择器，伪类选择器 -&gt; ID 选择器 -&gt; 行内样式 style=”” -&gt; !important 重要的</li></ul><table><thead><tr><th>参数值</th><th>权重</th></tr></thead><tbody><tr><td>继承或 *</td><td>0,0,0,0</td></tr><tr><td>元素选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器，伪类选择器，子选择器</td><td>0,0,1,0</td></tr><tr><td>ID 选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式 style=””</td><td>1,0,0,0</td></tr><tr><td>!important 重要的</td><td>无穷大</td></tr></tbody></table><ul><li>!important 使用方法 (优先级无穷大)：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>a 链接浏览器默认指定了一个样式，所以优先级和元素选择器一样(0,0,0,1)</li></ul><h4 id="权重叠加"><a href="# 权重叠加" class="headerlink" title="权重叠加"></a>权重叠加</h4><ul><li>复合选择器会出现权重叠加的问题</li><li>例：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* ul 和 li 的权重  0,0,0,1 + 0,0,0,1 = 0,0,0,2 */</span></span></span><br><span class="line">  ul li &#123;</span><br><span class="line">    color: green;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="comment">/* li 的权重  0,0,0,1 */</span></span></span><br><span class="line">  li &#123;</span><br><span class="line">    color: blue;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="comment">/* .nav 和 li 的权重  0,0,1,0 + 0,0,0,1 = 0,0,1,1 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">    color: pink;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是绿色<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注：权重不会出现进位</li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104239642" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104239642</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 9</title>
      <link href="/archives/862b6757.html"/>
      <url>/archives/862b6757.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 9"><a href="#HTML 与 CSS 学习 9" class="headerlink" title="HTML 与 CSS 学习 9"></a>HTML 与 CSS 学习 9</h1><blockquote><p>这篇文章主要讲了 CSS2D 和 3D 转换 动画 和浏览器私有前缀 <br> 这是初学者看这个视频写下的笔记，如有错误，欢迎指正</p></blockquote><a id="more"></a><h2 id="CSS-2D 转换 -transform"><a href="#CSS-2D 转换 -transform" class="headerlink" title="CSS 2D 转换 (transform)"></a>CSS 2D 转换 (transform)</h2><ul><li><p>CSS3 新特性</p></li><li><p>实现元素位移，旋转，缩放</p></li><li><p>网页的坐标系和数学里面的不太一样 Y 轴是向下的</p></li></ul><h3 id="移动 -translate"><a href="# 移动 -translate" class="headerlink" title="移动 (translate)"></a>移动 (translate)</h3><ul><li><p>和定位有点像</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(x,y);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(n);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>2d 转换的优点： 不会影响其他元素的位置</p></li><li><p>实例：图片向上浮动的效果</p></li><li><p>translate 移动百分比是相对于自身元素的大小 (结合定位方法的垂直居中使用 translate(-50%,-50%))</p></li><li><p>对行内标签没有效果</p></li></ul><h3 id="旋转 -rotate"><a href="# 旋转 -rotate" class="headerlink" title="旋转 (rotate)"></a>旋转 (rotate)</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">tranform</span>: <span class="built_in">rotate</span>(<span class="number">10deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：rotate 里面是度数 单位是 deg</p></li><li><p>顺时针 正，逆时针 负</p></li><li><p>默认旋转中心是元素中心点</p></li></ul><h4 id="修改旋转中心点 -transform-origin"><a href="# 修改旋转中心点 -transform-origin" class="headerlink" title="修改旋转中心点 (transform-origin)"></a>修改旋转中心点 (transform-origin)</h4><ul><li><p>代码示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform-origin</span>: x y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：参数 x 和 y 用空格隔开</p></li><li><p>默认旋转中心为中心点 (50%,50%)</p></li><li><p>可以使用方位名词</p></li></ul><h4 id="旋转练习"><a href="# 旋转练习" class="headerlink" title="旋转练习"></a>旋转练习</h4><ul><li>下拉三角的制作</li><li>代码样例:</li></ul><blockquote><p>感觉实际应用不会用这个，这个可以当作个练习</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div &#123;</span><br><span class="line">      content: relative;</span><br><span class="line">      width: 150px;</span><br><span class="line">      height: 35px;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">soild</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">div</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">      content: absolute;</span><br><span class="line">      width: 10px;</span><br><span class="line">      height: 10px;</span><br><span class="line"><span class="css">      <span class="selector-tag">border-right</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">      transform: rotate(45deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>旋转更换文字的背景颜色显示效果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div &#123;</span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 200px;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">      overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">div</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">      content: '';</span><br><span class="line"><span class="css">      <span class="comment">/* 一定注意伪元素是行内块元素 */</span></span></span><br><span class="line">      display: block;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">      background-color: skyblue;</span><br><span class="line">      transform-origin: left bottom;</span><br><span class="line">      transform: rotate(180deg);</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">      transform: rotate(0deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="缩放 -scale"><a href="# 缩放 -scale" class="headerlink" title="缩放 (scale)"></a>缩放 (scale)</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(x,y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：其中的 x 和 y 用逗号分割</p></li><li><p>x 和 y 用数字，1 代表一倍，2 代表两倍</p></li><li><p>x 和 y 不加单位</p></li><li><p>如果只给一个参数，则宽度高度一起变</p></li><li><p>scale 的优势：</p><ul><li>正常修改宽高的话，高度会以顶边为基准</li><li>scale 不会影响其他盒子，且可以设置缩放的中心点</li></ul></li><li><p>修改缩放中心点和旋转的一样 (transform-origin)</p></li></ul><h4 id="缩放实例"><a href="# 缩放实例" class="headerlink" title="缩放实例"></a>缩放实例</h4><ul><li><p>鼠标经过一个盒子，会出现图片被放大的情况</p></li><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div &#123;</span><br><span class="line">      float: left;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">  div img &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.4</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.1</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>分页按钮案例：每一个按钮鼠标经过时会放大</p></li><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  li &#123;</span><br><span class="line">      width: 30px;</span><br><span class="line">      height: 30px;</span><br><span class="line">      margin: 10px;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 30px;</span><br><span class="line">      list-style: none;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      cursor: pointer;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.2s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2D 效果综合写法"><a href="#2D 效果综合写法" class="headerlink" title="2D 效果综合写法"></a>2D 效果综合写法</h3><ul><li><p>代码示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>() <span class="built_in">rotate</span>() <span class="built_in">scale</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>属性中间用空格隔开</p></li><li><p>顺序会影响转换的效果</p></li><li><p>同时有位移或着其他效果时，位移要放到前面</p></li><li><p>两个属性是同时进行的 (属性开始有先后顺序)</p></li></ul><h2 id="CSS- 动画 -animation"><a href="#CSS- 动画 -animation" class="headerlink" title="CSS 动画 (animation)"></a>CSS 动画 (animation)</h2><ul><li>制作动画流程：<ol><li>先定义动画</li><li>在使用 (调用) 动画</li></ol></li></ul><h3 id="利用 keyframes 定义动画"><a href="# 利用 keyframes 定义动画" class="headerlink" title="利用 keyframes 定义动画"></a>利用 keyframes 定义动画</h3><ul><li><p>类似于定义类选择器</p></li><li><p>代码示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">    <span class="comment">/* 开始状态 */</span></span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 结束状态 */</span></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>动画序列:</p><ul><li>0%：动画开始 (from)</li><li>100%：动画完成 (to)</li></ul></li><li><p>0% 和 100% 之间可以分成很多个部分</p></li><li><p>百分比是时间的划分</p></li></ul><h3 id="元素使用动画"><a href="# 元素使用动画" class="headerlink" title="元素使用动画"></a>元素使用动画</h3><ul><li><p>代码示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 调用动画 */</span></span><br><span class="line">    <span class="attribute">animation-name</span>: 动画名称;</span><br><span class="line">    <span class="comment">/* 持续时间 */</span></span><br><span class="line">    <span class="attribute">animation-duration</span>: 持续时间;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>注意：持续时间单位为秒</li></ul><h3 id="动画属性"><a href="# 动画属性" class="headerlink" title="动画属性"></a>动画属性</h3><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">animation-name</td><td align="center">动画名称 <strong>必须</strong></td></tr><tr><td align="center">animation-duration</td><td align="center">完成一个周期花费的时间 <strong>必须</strong></td></tr><tr><td align="center">animation-timing-function</td><td align="center">动画速度曲线，默认为 ease</td></tr><tr><td align="center">animation-delay</td><td align="center">动画延迟开始，默认为 0</td></tr><tr><td align="center">animation-iteration-count</td><td align="center">动画播放次数，无限循环 infinite</td></tr><tr><td align="center">animation-direction</td><td align="center">动画在下一周期是否逆向播放，默认 normal 逆向播放 alternate</td></tr><tr><td align="center">animation-play-state</td><td align="center">动画暂停，默认 running 暂停 paused</td></tr><tr><td align="center">animation-fill-mode</td><td align="center">动画结束后的状态，保持 forwards 回到起始 backwards</td></tr></tbody></table><h4 id="速度曲线细节"><a href="# 速度曲线细节" class="headerlink" title="速度曲线细节"></a>速度曲线细节</h4><table><thead><tr><th align="center">参数值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">linear</td><td align="center">匀速</td></tr><tr><td align="center">ease</td><td align="center">先快后慢</td></tr><tr><td align="center">ease-in</td><td align="center">以低速开始</td></tr><tr><td align="center">ease-out</td><td align="center">以低速结束</td></tr><tr><td align="center">ease-in-out</td><td align="center">以低速开始和结束</td></tr><tr><td align="center">steps()</td><td align="center">步长 <strong>重要！</strong></td></tr></tbody></table><ul><li>步长详解：<ul><li>动画从头走到尾需要多少步</li><li>效果就变得一帧一帧的了 (可以制作打字机效果)</li></ul></li></ul><h3 id="动画简写"><a href="# 动画简写" class="headerlink" title="动画简写"></a>动画简写</h3><ul><li><p>代码示范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反向 是否返回起始点;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>除了动画名称和持续时间剩下的都可以省略</p></li><li><p>注意：简写里面不包括 animation-play-state (暂停属性)</p></li></ul><h3 id="动画案例"><a href="# 动画案例" class="headerlink" title="动画案例"></a>动画案例</h3><ul><li><p>实现波纹的效果，可以用圆圈阴影从小变大实现</p></li><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.point</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 100px;</span><br><span class="line">        right: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.dotted</span> &#123;</span></span><br><span class="line">        width: 8px;</span><br><span class="line">        height: 8px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#09f</span>;</span></span><br><span class="line">        border-radius: 50%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.point</span> <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">"wave"</span>]</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line"><span class="css">        <span class="comment">/* 让阴影盒子和圆点在同一位置 */</span></span></span><br><span class="line">        top: 50%;</span><br><span class="line">        left: 50%;</span><br><span class="line">        transform: translate(-50%);</span><br><span class="line">        width: 8px;</span><br><span class="line">        height: 8px;</span><br><span class="line"><span class="css">        <span class="selector-tag">box-shadow</span>: 0 0 12<span class="selector-tag">px</span> <span class="selector-id">#009dfd</span>;</span></span><br><span class="line">        border-radius: 50%;</span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">pulse</span> 1<span class="selector-class">.2s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.point</span> <span class="selector-tag">div</span><span class="selector-class">.wave1</span> &#123;</span></span><br><span class="line">        animation-delay: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.point</span> <span class="selector-tag">div</span><span class="selector-class">.wave2</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation-delay</span>: <span class="selector-class">.4s</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.point</span> <span class="selector-tag">div</span><span class="selector-class">.wave3</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation-delay</span>: <span class="selector-class">.8s</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> pulse&#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        70% &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line"><span class="css">            <span class="comment">/* 透明度 */</span></span></span><br><span class="line">            opacity: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            width: 70px;</span><br><span class="line">            height: 70px;</span><br><span class="line">            opacity: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"point"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dotted"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wave1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wave2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wave3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>波纹没有使用 scale 缩放属性：缩放会连带着阴影大小一块缩放，很不美观</p></li><li><p>百度浏览器熊跑步的效果</p></li><li><p>百度的熊是一张长图片上有好几张运动状态的熊，用 step 来弄，每一帧放一个熊上去</p></li><li><p>注意，图片往左走的时候是负值</p></li><li><p>元素可以添加多个动画，用逗号隔开 (在第一个动画后面加逗号)</p></li></ul><h2 id="CSS-3D 转换 -transform"><a href="#CSS-3D 转换 -transform" class="headerlink" title="CSS 3D 转换 (transform)"></a>CSS 3D 转换 (transform)</h2><ul><li>z 轴往外为正，往里为负</li></ul><h3 id="3D 位移 -translate3d"><a href="#3D 位移 -translate3d" class="headerlink" title="3D 位移 (translate3d)"></a>3D 位移 (translate3d)</h3><ul><li><p>可以沿着 z 轴方向移动</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 分别沿 xyz 轴移动 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="comment">/* 混合写法 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(x,y,z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>要是单个写的话注意后面的样式会覆盖前面的样式</p></li><li><p>但是可以这么写:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>), <span class="built_in">translateY</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="comment">/* 推荐使用混合写法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>混合写法时 xyz 不能省略，没有要写 0</p></li><li><p>只移动 z 轴看不到效果，得结合透视一起才有效果</p></li></ul><h3 id="透视 -perspective"><a href="# 透视 -perspective" class="headerlink" title="透视 (perspective)"></a>透视 (perspective)</h3><ul><li><p>想让网页中产生 3D 效果，需要透视</p></li><li><p>透视 == 视距，人眼到屏幕的距离 (近大远小)</p></li><li><p>透视要写在被观察元素的父盒子里</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 透视写在父盒子里 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3D 旋转 -rotate3d"><a href="#3D 旋转 -rotate3d" class="headerlink" title="3D 旋转 (rotate3d)"></a>3D 旋转 (rotate3d)</h3><ul><li><p>除了坐标轴外，还可以沿着自定义轴旋转</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">    <span class="comment">/* 自定义轴 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(x,y,z,deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>rotate 是沿着图片中心旋转的</p></li><li><p>旋转方向判断: 左手准则</p><ul><li>左手沿着坐标轴正方向, 四指弯曲的方向就是旋转正方向</li></ul></li><li><p>使用的时候需要加透视才能看出 3d 效果</p></li><li><p>自定义轴: x,y,z 可以取 0 到 1, 表示是否希望沿这个轴旋转</p><ul><li>例如 x=1, y=1 就是沿着对角线旋转</li></ul></li></ul><h3 id="3D 呈现 -transform-style"><a href="#3D 呈现 -transform-style" class="headerlink" title="3D 呈现 (transform-style)"></a>3D 呈现 (transform-style)</h3><ul><li><p>控制子元素是否开启 3D 空间</p></li><li><p>代码示例:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">transform-style</span>: flat | preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>flat: 默认值, 不开启 3D 空间</p></li><li><p>preserve-3d: 子元素开启 3D 空间</p></li><li><p>代码写在父盒子里</p></li></ul><h4 id="案例 1- 两面反转的盒子"><a href="# 案例 1- 两面反转的盒子" class="headerlink" title="案例 1: 两面反转的盒子"></a>案例 1: 两面反转的盒子</h4><ul><li><p>需求, 旋转之后颜色改变, 文字也改变</p></li><li><p>代码示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">      width: 300px;</span><br><span class="line">      height: 300px;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line">      position: relative;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">      transform-style: preserve-3d;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.front</span>,</span></span><br><span class="line"><span class="css">  <span class="selector-class">.back</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      font-size: 30px;</span><br><span class="line">      text-align: center;</span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">      line-height: 300px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.front</span> &#123;</span></span><br><span class="line">      background-color: pink;</span><br><span class="line">      z-index: 1;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.back</span> &#123;</span></span><br><span class="line">      background-color: purple;</span><br><span class="line">      transform: rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">      transform: rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"front"</span>&gt;</span>天王盖地虎 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"back"</span>&gt;</span> 宝塔镇河妖<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>注意添加视距和 3D 呈现</li></ul><h4 id="案例 2-3D 导航栏"><a href="# 案例 2-3D 导航栏" class="headerlink" title="案例 2: 3D 导航栏"></a>案例 2: 3D 导航栏</h4><ul><li><p>代码示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  body &#123;</span><br><span class="line"><span class="css">      <span class="comment">/* 旋转需要旋转 box, 所以要给他的上一级写透视 */</span></span></span><br><span class="line">      perspective: 500px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">      position: relative;</span><br><span class="line">      width: 120px;</span><br><span class="line">      height: 35px;</span><br><span class="line">      transform-style: preserve-3d;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.front</span>,</span></span><br><span class="line"><span class="css">  <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 0;</span><br><span class="line">      top: 0;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.front</span> &#123;</span></span><br><span class="line">      background-color: pink;</span><br><span class="line">      z-index: 1;</span><br><span class="line"><span class="css">      <span class="comment">/* 需要把这个盒子往前移, 这样才能保证沿 x 轴旋转的时候不变型 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">transform</span>: <span class="selector-tag">translateZ</span>(17<span class="selector-class">.5px</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">      background-color: purple;</span><br><span class="line"><span class="css">      <span class="comment">/* 这里注意: 旋转一定是负值 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">transform</span>: <span class="selector-tag">translateY</span>(17<span class="selector-class">.5px</span>) <span class="selector-tag">rotateX</span>(<span class="selector-tag">-90deg</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">      transform: rotateX(90deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"front"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>旋转时一定要注意, 盒子是区分前后的, 所以一定注意正负</li></ul><h3 id="案例：照片旋转木马"><a href="# 案例：照片旋转木马" class="headerlink" title="案例：照片旋转木马"></a>案例：照片旋转木马</h3><ul><li><p>展示实例(以后一定用到网页上)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        perspective: 1000px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    section &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        width: 300px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        margin: 100px auto;</span><br><span class="line">        transform-style: preserve-3d;</span><br><span class="line">        animation: rotate 10s linear infinite;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    section div &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        background: url(image/background.jpg) no-repeat;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">        transform: translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">        transform: rotateY(60deg) translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line">        transform: rotateY(120deg) translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">        transform: rotateY(180deg) translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line">        transform: rotateY(240deg) translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(6)</span> &#123;</span></span><br><span class="line">        transform: rotateY(300deg) translateZ(300px);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> rotate &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotateY(0);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        100% &#123;</span><br><span class="line">            transform: rotateY(360deg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">section</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">        animation-play-state: paused;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>注意，这里要先旋转再移动，否则就会变成交叉再一块旋转</li></ul><h2 id="浏览器私有前缀"><a href="# 浏览器私有前缀" class="headerlink" title="浏览器私有前缀"></a>浏览器私有前缀</h2><ul><li>私有前缀为了兼容老版本的写法，新版无需添加</li><li>私有前缀：</li></ul><table><thead><tr><th align="center">参数值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">-moz-</td><td align="center">火狐(firebox)</td></tr><tr><td align="center">-ms-</td><td align="center">IE</td></tr><tr><td align="center">-webit-</td><td align="center">safari 或 chrome 属性</td></tr><tr><td align="center">-o-</td><td align="center">Opera 属性</td></tr></tbody></table><ul><li><p>圆角是有兼容问题</p></li><li><p>解决方法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">-moz-border-raidus</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-raidus</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-o-border-raidus</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104601947" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104601947</a></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 8</title>
      <link href="/archives/f12c57c1.html"/>
      <url>/archives/f12c57c1.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 8"><a href="#HTML 与 CSS 学习 8" class="headerlink" title="HTML 与 CSS 学习 8"></a>HTML 与 CSS 学习 8</h1><blockquote><p>这篇笔记主要讲了 HTML5 和 CSS3 的新特性 <br>HTML5 新增了语义化标签，多媒体标签，input 表单<br>CSS3 新增了属性选择器，结构伪类选择器(child 类型，of-type 选择器)，伪元素选择器，不受 padding 和 margin 影响的盒子模型，类似动画的过渡属性，模糊属性，和执行计算函数<br> 这篇笔记是初学者写下的笔记，如有错误，欢迎前来指正</p></blockquote><a id="more"></a><h2 id="HTML5 新特性"><a href="#HTML5 新特性" class="headerlink" title="HTML5 新特性"></a>HTML5 新特性</h2><ul><li>有兼容性的问题，基本上在 IE9 以上才能使用</li></ul><h3 id="HTML5 新增语义化标签"><a href="#HTML5 新增语义化标签" class="headerlink" title="HTML5 新增语义化标签"></a>HTML5 新增语义化标签</h3><ul><li>终结了所有盒子都叫 div</li><li>新增标签：</li></ul><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><header></header></td><td align="center">头部标签</td></tr><tr><td align="center"><nav></nav></td><td align="center">导航标签</td></tr><tr><td align="center"><article></article></td><td align="center">内容标签</td></tr><tr><td align="center"><section></section></td><td align="center">定义文档某个区域</td></tr><tr><td align="center"><aside></aside></td><td align="center">侧边栏标签</td></tr><tr><td align="center"><footer></footer></td><td align="center">尾部标签</td></tr></tbody></table><ul><li>在 IE9 使用需要转化成块级元素</li></ul><h3 id="HTML5 新增的多媒体标签"><a href="#HTML5 新增的多媒体标签" class="headerlink" title="HTML5 新增的多媒体标签"></a>HTML5 新增的多媒体标签</h3><ul><li>音频：<audio></audio></li><li>视频：<video></video></li></ul><h4 id="视频标签 -video"><a href="# 视频标签 -video" class="headerlink" title="视频标签 (video)"></a>视频标签 (video)</h4><ul><li><p>只支持 mp4(<strong>支持的最多</strong>)，webm，ogg</p></li><li><p>语法规范：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"文件地址"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>属性值：</p></li></ul><table><thead><tr><th align="center">标签</th><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">autoplay</td><td align="center">autoplay</td><td align="center">视频自动播放 (google 浏览器禁用了这个属性)</td></tr><tr><td align="center">controls</td><td align="center">controls</td><td align="center">向用户展示播放控件</td></tr><tr><td align="center">width</td><td align="center">px(像素)</td><td align="center">设置播放器宽度</td></tr><tr><td align="center">height</td><td align="center">px(像素)</td><td align="center">设置播放器高度</td></tr><tr><td align="center">loop</td><td align="center">loop</td><td align="center">播放完成后是否循环播放</td></tr><tr><td align="center">preload</td><td align="center">auto(预加载视频) none(不预加载视频)</td><td align="center">是否预加载视频</td></tr><tr><td align="center">src</td><td align="center">url 地址</td><td align="center">视频 url 地址</td></tr><tr><td align="center">poster</td><td align="center">image(图片)</td><td align="center">加载等待画面图片</td></tr><tr><td align="center">muted</td><td align="center">muted</td><td align="center">静音播放</td></tr></tbody></table><ul><li>解决 Google 浏览器不能自动播放的问题，在 autoplay 的基础上添加 muted 属性 (muted=“muted”)</li><li>controls 一般用 js 解决</li></ul><h4 id="音频标签 -audio"><a href="# 音频标签 -audio" class="headerlink" title="音频标签 (audio)"></a>音频标签 (audio)</h4><ul><li><p>支持音频格式：mp3(<strong>支持的最多</strong>) ，wav，ogg</p></li><li><p>语法规范：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"文件地址"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">标签</th><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">autoplay</td><td align="center">autoplay</td><td align="center">音频自动播放 (google 浏览器也禁用了这个属性)</td></tr><tr><td align="center">controls</td><td align="center">controls</td><td align="center">向用户展示播放控件</td></tr><tr><td align="center">loop</td><td align="center">loop</td><td align="center">循环播放</td></tr><tr><td align="center">src</td><td align="center">url</td><td align="center">播放音频的位置</td></tr></tbody></table><ul><li>google 禁用音频只能通过 js 来解决</li></ul><h3 id="HTML5 新增 input 表单"><a href="#HTML5 新增 input 表单" class="headerlink" title="HTML5 新增 input 表单"></a>HTML5 新增 input 表单</h3><ul><li>input 新增的 type 属性值：</li></ul><table><thead><tr><th align="center">type 属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">email</td><td align="center">输入为 email 类型</td></tr><tr><td align="center">url</td><td align="center">url 类型</td></tr><tr><td align="center">date</td><td align="center">日期</td></tr><tr><td align="center">time</td><td align="center">时间</td></tr><tr><td align="center">month</td><td align="center">月</td></tr><tr><td align="center">week</td><td align="center">周</td></tr><tr><td align="center">number</td><td align="center">数字</td></tr><tr><td align="center">tel</td><td align="center">手机号码</td></tr><tr><td align="center">search</td><td align="center">搜索框</td></tr><tr><td align="center">color</td><td align="center">颜色选择表单</td></tr></tbody></table><ul><li><p>代码案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用时如果内容错误，点击提交的时候会报错</p></li></ul><h4 id="HTML5 新增表单属性"><a href="#HTML5 新增表单属性" class="headerlink" title="HTML5 新增表单属性"></a>HTML5 新增表单属性</h4><ul><li><p>语法规范：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">属性</th><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">required</td><td align="center">required</td><td align="center">表单拥有属性后不能为空，必填</td></tr><tr><td align="center">placeholder</td><td align="center">提示文本</td><td align="center">表单提示信息，存在默认值将不显示</td></tr><tr><td align="center">autofocus</td><td align="center">autofocus</td><td align="center">自动聚焦属性，页面加载完成后自动聚焦到指定表单</td></tr><tr><td align="center">autocomplete</td><td align="center">off / on</td><td align="center">在当用户成功提交过，下次搜索就可以自动填充，默认为 on，开发时改为 off</td></tr><tr><td align="center">multiple</td><td align="center">multiple</td><td align="center">可以多选文件提交(经常和 type=”file”使用)</td></tr></tbody></table><ul><li><p>required 同样在提交时报错</p></li><li><p>更改 placeholder 里文字的颜色：</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<br>​    </p><h2 id="CSS3 新特性"><a href="#CSS3 新特性" class="headerlink" title="CSS3 新特性"></a>CSS3 新特性</h2><ul><li>兼容性：IE9 以上支持</li></ul><h3 id="CSS3 新增选择器"><a href="#CSS3 新增选择器" class="headerlink" title="CSS3 新增选择器"></a>CSS3 新增选择器</h3><ol><li>属性选择器</li><li>结构伪类选择器</li><li>伪类选择器</li></ol><h4 id="属性选择器"><a href="# 属性选择器" class="headerlink" title="属性选择器 []"></a>属性选择器 []</h4><ul><li><p>选择元素有某个属性的标签</p></li><li><p>注意：属性选择器权重为 10 (方括号内的才算属性选择器)</p></li><li><p>代码案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* 选择 input 标签里有 value 属性的标签 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-tag">input</span><span class="selector-attr">[value]</span> &#123;</span></span><br><span class="line">      color: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="comment">/* 选择 input 标签 value 属性为 select 的标签 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-tag">input</span><span class="selector-attr">[value=<span class="string">"select"</span>]</span> &#123;</span></span><br><span class="line">      color: red;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"select"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>可以选择属性值开头的某些元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 选择那些 div 盒子里有 class 属性，且属性值以 icon 开头的元素 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class^=icon]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择某些属性值结尾的某些元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class$=icon]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: grey;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择值里面有这个文字的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 只要是 class 属性里有 icon 值的都选出来 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[class*=icon]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="结构伪类选择器"><a href="# 结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h4><ul><li>权重为 10</li></ul><h5 id="child 类型"><a href="#child 类型" class="headerlink" title="child 类型"></a>child 类型</h5><ul><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 选择 ul 下面第一个叫 li 元素 */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* 相同的类型还有 last-child，nth-child(n)；第 n 个元素，n 可以是数字，关键字和公式 */</span></span></span><br><span class="line">    background-color: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实例：隔行变色</p></li><li><p>用到 nth-child 里的关键字 even- 偶数 odd- 奇数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: grey;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>nth-child 里面的公式 如果 n 是公式，则会从 0 开始计算，每次加一，但是第 0 个元素和超出的元素个数会被忽略</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(n)</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: grey;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：只能用 n 这个字母，但是可以使用加减乘除常数</p></li><li><p>例如 2n 就选择偶数，n+5 就是从第五个开始选择到最后</p></li></ul><h5 id="of-type 类"><a href="#of-type 类" class="headerlink" title="of-type 类"></a>of-type 类</h5><ul><li><p>语法规范</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-of-type</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-of-type</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(n)</span> &#123;&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>child 类：</p><ul><li>nth-child 会把所有盒子排序</li><li>然后先看 nth-child(1)找到那个元素，然后再看前面它指定的标签，如果这两个不匹配，那么这个样式就不显现出来</li></ul></li><li><p>of-type 类：</p><ul><li>nth-of-type(1)会把指定元素排序</li><li>然后再把第一个元素指定样式</li></ul></li></ul><h4 id="伪元素选择器"><a href="# 伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h4><ul><li>CSS 创建标签，不需要 HTML 标签</li><li>权重为 1</li></ul><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">::before</td><td align="center">在父元素内容的前面插入内容</td></tr><tr><td align="center">::after</td><td align="center">在元素内容的后面插入内容</td></tr></tbody></table><ul><li><p>before 和 after 创建一个行内元素</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: skyblue;</span><br><span class="line">  <span class="comment">/* 必须书写的属性 */</span></span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：before 和 after 必须有 content 属性 (类似于内容)</p></li><li><p>before 和 after 需要放到父元素的前面或后面</p></li><li><p>元素和:: 不能有空隙</p></li></ul><h5 id="伪元素实例"><a href="# 伪元素实例" class="headerlink" title="伪元素实例"></a>伪元素实例</h5><ul><li><p>搜索框后面的小箭头</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.fake</span> &#123;</span></span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 35px;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.fake</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">    content: "^";</span><br><span class="line"><span class="css">    <span class="comment">/* 用定位来做，防止影响其他元素 */</span></span></span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 10px;</span><br><span class="line">    right: 0px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fake"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>半遮罩层效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">    content: '';</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line"><span class="css">    <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.3</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/* 中间不能有空格 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>伪元素清除浮动 (在 demo7 里面)</li></ul><h3 id="CSS3 盒子模型 -box-sizing"><a href="#CSS3 盒子模型 -box-sizing" class="headerlink" title="CSS3 盒子模型 (box-sizing)"></a>CSS3 盒子模型 (box-sizing)</h3><ul><li><p>原来的盒子增加 border，padding 会撑大盒子</p></li><li><p>CSS3 解决了这个问题！</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box | border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>content-box <strong>默认值</strong> 盒子大小为 width+padding+border</p></li><li><p>border-box 盒子最终大小为 width (padding 和 margin 不要大于 width 宽度)</p></li><li><p>可以在 CSS 初始化时加上这个属性</p></li></ul><h3 id="CSS3 图片变模糊 -filter"><a href="#CSS3 图片变模糊 -filter" class="headerlink" title="CSS3 图片变模糊 (filter)"></a>CSS3 图片变模糊 (filter)</h3><ul><li><p>CSS3 新增的滤镜属性</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: 函数();</span><br><span class="line">  <span class="comment">/* 例：filter: blur(5px); blur 模糊处理 ，数值越大越模糊 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>函数可以通过 <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="external nofollow noopener noreferrer">MDN</a> 查询</li></ul><h3 id="CSS3 执行计算函数 -calc"><a href="#CSS3 执行计算函数 -calc" class="headerlink" title="CSS3 执行计算函数 (calc)"></a>CSS3 执行计算函数 (calc)</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span>-<span class="number">80px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>使用场景，子盒子永远比父盒子小 80px (用于经常改变宽度的父盒子)</li></ul><h3 id="CSS3 过渡属性 -transition"><a href="#CSS3 过渡属性 -transition" class="headerlink" title="CSS3 过渡属性 (transition)"></a>CSS3 过渡属性 (transition)</h3><ul><li><p>经常和 :hover 一起使用</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: 要过渡的属性 花费时间 运动曲线 何时开始;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">要过渡的属性</td><td align="center">想要变化的 CSS 属性，高度宽度内外边距颜色都可以，所有属性都过渡写 all</td></tr><tr><td align="center">花费时间</td><td align="center">单位秒(必须写单位)</td></tr><tr><td align="center">运动曲线</td><td align="center">默认 ease (逐渐慢下来)</td></tr><tr><td align="center">何时开始</td><td align="center">单位秒，设置延迟触发时间(必须有单位) 默认 0s</td></tr></tbody></table></li><li><p>注意：transition 属性一定要写到开始变化的元素上</p></li><li><p>后面两个属性可以省略</p></li><li><p>同时修改两个属性 (修改效果不同) 时：</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: width .<span class="number">5s</span> ease <span class="number">1s</span>, height .<span class="number">5s</span> ease <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<br>​    </p><ul><li>修改效果相同时 选择属性写 all</li></ul><h4 id="过渡属性实例：进度条"><a href="# 过渡属性实例：进度条" class="headerlink" title="过渡属性实例：进度条"></a>过渡属性实例：进度条</h4><ul><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line">    width: 150px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">    border-radius: 7px;</span><br><span class="line">    padding: 1px 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.bar_in</span> &#123;</span></span><br><span class="line">    width: 50%;</span><br><span class="line">    height: 15px;</span><br><span class="line">    background-color: red;</span><br><span class="line">    border-radius: 7px;</span><br><span class="line"><span class="css">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 1<span class="selector-class">.5s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.bar</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.bar_in</span> &#123;</span></span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bar_in"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="过渡属性实例 - 小米 logo 切换"><a href="# 过渡属性实例 - 小米 logo 切换" class="headerlink" title="过渡属性实例 小米 logo 切换"></a>过渡属性实例 小米 logo 切换</h4><ul><li><p>代码案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.mi_box</span> &#123;</span></span><br><span class="line">      width: 50px;</span><br><span class="line">      height: 50px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#ff6700</span>;</span></span><br><span class="line">      margin: 100px auto;</span><br><span class="line">      position: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.mi_logo</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      right: 0;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.mi_home</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      right: -50px;</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.mi_box</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mi_logo</span> &#123;</span></span><br><span class="line">      right: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.mi_box</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mi_home</span> &#123;</span></span><br><span class="line">      right: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mi_box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mi_logo"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/mi-logo.png"</span> <span class="attr">alt</span>=<span class="string">"mi-logo"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mi_home"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/mi-home.png"</span> <span class="attr">alt</span>=<span class="string">"mi-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104457515" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104457515</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 7</title>
      <link href="/archives/61934a50.html"/>
      <url>/archives/61934a50.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 7"><a href="#HTML 与 CSS 学习 7" class="headerlink" title="HTML 与 CSS 学习 7"></a>HTML 与 CSS 学习 7</h1><blockquote><p>这篇文章主要讲了定位，隐藏，精灵图，字体图标，CSS 三角，鼠标样式，表单样式，vertical-align 属性，溢出部分省略号显示和一些布局技巧 <br> 这篇笔记东西比较多也比较杂，希望以后能认真看完 <br> 这篇笔记是初学者写下的笔记，如有错误，欢迎前来指正</p></blockquote><a id="more"></a><h2 id="CSS 定位"><a href="#CSS 定位" class="headerlink" title="CSS 定位"></a>CSS 定位</h2><ul><li><p>实例：例如固定在屏幕两边的模块，或者是在盒子上显示的小模块</p></li><li><p>定位，把盒子定在某个位置</p></li><li><p>定位 = 定位模式 + 边偏移</p></li></ul><h3 id="定位模式"><a href="# 定位模式" class="headerlink" title="定位模式"></a>定位模式</h3><ul><li><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: static | relative | absolute | fixed ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">static</td><td align="center">静态定位 <strong>默认值</strong></td></tr><tr><td align="center">relative</td><td align="center">相对定位</td></tr><tr><td align="center">absolute</td><td align="center">绝对定位</td></tr><tr><td align="center">fixed</td><td align="center">固定定位</td></tr></tbody></table></li></ul><h4 id="静态定位 -static"><a href="# 静态定位 -static" class="headerlink" title="静态定位 (static)"></a>静态定位 (static)</h4><ul><li>默认值，无定位 (标准流)</li></ul><h4 id="相对定位 -relative"><a href="# 相对定位 -relative" class="headerlink" title="相对定位 (relative)"></a>相对定位 (relative)</h4><ul><li>移动位置时，是根据它原来的位置来移动的</li><li>和浮动不一样，原来的位置仍然占有，后面的盒子依然以标准流的方式对待它 (保留原来位置，标准流)</li><li>经常和绝对定位一起使用</li></ul><h4 id="绝对定位 -absolute"><a href="# 绝对定位 -absolute" class="headerlink" title="绝对定位 (absolute)"></a>绝对定位 (absolute)</h4><ul><li>移动位置时，根据他的父元素的位置来移动</li><li>没有父元素或父元素没有定位，以浏览器为准</li><li>如果父级元素有定位(除了静态定位)，则会以最近一级带有定位的父级元素为准</li><li>例如：父元素没有定位，但爷爷元素有定位，那么定位会以爷爷元素为准</li><li>绝对定位不再占用原来的位置</li></ul><h4 id="子绝父相"><a href="# 子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h4><ul><li>子绝父相：子元素用绝对定位，父盒子用相对定位来约束子元素定位(并且保留原来位置，不会影响布局)</li></ul><h4 id="固定定位 -fixed"><a href="# 固定定位 -fixed" class="headerlink" title="固定定位 (fixed)"></a>固定定位 (fixed)</h4><ul><li><p>不论页面如何滚动，这个元素一直在这</p></li><li><p>以浏览器的可视窗口作为坐标轴</p></li><li><p>固定定位不占用原来的位置</p></li><li><p>固定定位可以以版心对齐 (适用返回顶部的小模块)</p><ul><li>先左对齐，然后 left: 50%;</li><li>然后在用 margin 走版心宽度的一半</li></ul></li></ul><h4 id="粘性定位 -sticky"><a href="# 粘性定位 -sticky" class="headerlink" title="粘性定位 (sticky)"></a>粘性定位 (sticky)</h4><ul><li><p>使用场景：在某一位置开始变成固定定位</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>以可视窗口作为坐标轴</p></li><li><p>占有原来的位置</p></li><li><p>必须添加 top、left、right、bottom 其中一个</p><ul><li>例：top: 0; 距离上沿 0 的时候开始变成固定定位</li></ul></li></ul><h3 id="边偏移"><a href="# 边偏移" class="headerlink" title="边偏移"></a>边偏移</h3><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">top</td><td align="center">到父元素上边线的距离</td></tr><tr><td align="center">bottom</td><td align="center">到父元素下边线的距离</td></tr><tr><td align="center">left</td><td align="center">到父元素左边线的距离</td></tr><tr><td align="center">right</td><td align="center">到父元素右边线的距离</td></tr></tbody></table><ul><li>一个盒子既有 left 属性又有 right 属性 默认执行 left 属性(top 和 bottom 默认执行 top)</li></ul><h3 id="定位叠放次序 -z-index"><a href="# 定位叠放次序 -z-index" class="headerlink" title="定位叠放次序 (z-index)"></a>定位叠放次序 (z-index)</h3><ul><li><p>使用定位时，出现盒子层叠的情况，用 z-index 来控制摆放次序</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: auto (默认值) | 正整数 | <span class="number">0</span> | 负整数;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>数值越大，盒子越靠上</p></li><li><p>auto 或者数值相同，后来者居上</p></li></ul><h3 id="定位的拓展"><a href="# 定位的拓展" class="headerlink" title="定位的拓展"></a>定位的拓展 </h3><h4 id="绝对定位水平居中"><a href="# 绝对定位水平居中" class="headerlink" title="绝对定位水平居中"></a> 绝对定位水平居中</h4><ul><li>绝对定位的盒子居中不能用 margin: 0 auto; 水平居中</li><li>解决办法：left: 50%; margin-left: 定位盒子宽度的一半;</li></ul><h4 id="定位特殊特性"><a href="# 定位特殊特性" class="headerlink" title="定位特殊特性"></a>定位特殊特性</h4><ul><li>绝对定位和固定定位和浮动类似<ol><li>可以设置高度和宽度</li><li>块元素加定位，不给大小的话默认是内容的大小</li><li>脱离标准流的盒子不会触发外边距合并的问题(塌陷)</li></ol></li></ul><h4 id="定位会完全压住盒子里面的内容"><a href="# 定位会完全压住盒子里面的内容" class="headerlink" title="定位会完全压住盒子里面的内容"></a>定位会完全压住盒子里面的内容</h4><ul><li><p>浮动只会压住下面标准流的盒子，但不会压住标准流里面的文字 / 图片</p><ul><li>浮动最早是做文字环绕效果的，所以文字不会挡住文字</li></ul></li><li><p>绝对定位 (固定定位) 会完全压住盒子里面的内容</p></li></ul><h2 id="元素的显示与隐藏"><a href="# 元素的显示与隐藏" class="headerlink" title="元素的显示与隐藏"></a>元素的显示与隐藏</h2><ul><li>让一个元素显示或隐藏</li></ul><h3 id="display- 隐藏"><a href="#display- 隐藏" class="headerlink" title="display 隐藏"></a>display 隐藏</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none | block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>none 隐藏元素</p></li><li><p>block 除了可以转换成块元素还可以显示元素</p></li><li><p>注意：隐藏后的元素不占用原来的位置</p></li></ul><h3 id="visibility- 可见性"><a href="#visibility- 可见性" class="headerlink" title="visibility 可见性"></a>visibility 可见性</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">visibility</span>: visible | hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>visible 可视，hidden 隐藏</p></li><li><p>不同点：隐藏，但保留位置</p></li></ul><h3 id="overflow- 溢出部分隐藏"><a href="#overflow- 溢出部分隐藏" class="headerlink" title="overflow 溢出部分隐藏"></a>overflow 溢出部分隐藏</h3><ul><li><p>对溢出部分进行管理</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: visible | auto | hidden | scroll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>visible <strong>默认值</strong> 超出的部分显示出来</p></li><li><p>auto 在需要的时候添加滚动条</p></li><li><p>hidden 把多出来的部分隐藏</p></li><li><p>scroll 一直显示滚动条</p></li><li><p>如果有用定位的盒子，慎用 overflow: hidden，因为会隐藏超出的部分</p></li></ul><h2 id="精灵图"><a href="# 精灵图" class="headerlink" title="精灵图"></a>精灵图</h2><ul><li>很多小图片会增多服务器请求次数，为了减少请求次数 –&gt; css 精灵技术</li></ul><h3 id="精灵技术使用 -sprite"><a href="# 精灵技术使用 -sprite" class="headerlink" title="精灵技术使用 (sprite)"></a>精灵技术使用 (sprite)</h3><ul><li>针对背景图片使用</li><li>使用的属性：背景图片的位置 (background-position)</li><li>网页中的坐标和数学里的不一样，所以一般情况下都是网上往左移动，所以数值都是负值</li></ul><h2 id="字体图标 -iconfont"><a href="# 字体图标 -iconfont" class="headerlink" title="字体图标 (iconfont)"></a>字体图标 (iconfont)</h2><ul><li><p>展示的是图标，但本质是一种字体</p></li><li><p>优点：比精灵图要小，可以灵活改变颜色，兼容性强</p></li><li><p>字体图标库下载 <a href="http://icomoon.io" target="_blank" rel="external nofollow noopener noreferrer">icomoon</a> <a href="http://www.iconfont.cn/" target="_blank" rel="external nofollow noopener noreferrer"> 阿里 iconfont</a></p></li><li><p>把 fonts 文件夹复制到网页根目录下</p></li><li><p>使用：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在下载的压缩包里的 style.css 文件里复制 @font-face 声明 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="keyword">@font-face</span> &#123;</span></span><br><span class="line">  font-family: 'icomoon';</span><br><span class="line">  src:  url('fonts/icomoon.eot?dka4r');</span><br><span class="line">  src:  url('fonts/icomoon.eot?dka4r#iefix') format('embedded-opentype'),</span><br><span class="line">    url('fonts/icomoon.ttf?dka4r') format('truetype'),</span><br><span class="line">    url('fonts/icomoon.woff?dka4r') format('woff'),</span><br><span class="line">    url('fonts/icomoon.svg?dka4r#icomoon') format('svg');</span><br><span class="line">  font-weight: normal;</span><br><span class="line">  font-style: normal;</span><br><span class="line">  font-display: block;</span><br><span class="line">&#125;</span><br><span class="line">span &#123;l</span><br><span class="line"><span class="css">  <span class="comment">/* 指定字体为 @font-face 里的 font-family */</span></span></span><br><span class="line">  font-family: 'iconmoon';</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 在 demo.html 里找到图标下面的小方框 '' 这就是要用的图标 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="字体图标追加"><a href="# 字体图标追加" class="headerlink" title="字体图标追加"></a>字体图标追加</h3><ul><li>把 selection.json 文件重新上传，选中自己想要更新的图标，下载压缩包，替换原来的文件即可</li></ul><h2 id="CSS 三角"><a href="#CSS 三角" class="headerlink" title="CSS 三角"></a>CSS 三角</h2><ul><li><p>代码样例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 向右的箭头 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div &#123;</span><br><span class="line">    width: 0px;</span><br><span class="line">    height: 0px;</span><br><span class="line">    border: 10px solid transparent;</span><br><span class="line">    border-left: 10px solid blue;</span><br><span class="line"><span class="css">    <span class="comment">/* 下面两行为了照顾兼容性 */</span></span></span><br><span class="line">    line-height: 0;</span><br><span class="line">    font-size: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>一个盒子没有大小，但是有边框，四个边框以对角线划分整个盒子</p></li><li><p>所以就可以只指定一个方向有颜色，另外三个都没有颜色</p></li><li><p>开发时用定位来做盒子上面的小箭头</p></li><li><p>注意箭头方向移动的值为 border 宽度的二倍 (因为有一半是透明的)</p></li></ul><h2 id="CSS 用户界面样式"><a href="#CSS 用户界面样式" class="headerlink" title="CSS 用户界面样式"></a>CSS 用户界面样式</h2><ul><li>可以更改用户鼠标样式，表单轮廓，防止表单域拖拽</li></ul><h3 id="更改鼠标样式 -cursor"><a href="# 更改鼠标样式 -cursor" class="headerlink" title="更改鼠标样式 (cursor)"></a>更改鼠标样式 (cursor)</h3><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: default | pointer | move | text | not-allowed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">default</td><td align="center">默认值</td></tr><tr><td align="center">pointer</td><td align="center">小手</td></tr><tr><td align="center">move</td><td align="center">移动</td></tr><tr><td align="center">text</td><td align="center">文本</td></tr><tr><td align="center">not-allowed</td><td align="center">禁止</td></tr></tbody></table></li></ul><h3 id="表单轮廓线 -outline"><a href="# 表单轮廓线 -outline" class="headerlink" title="表单轮廓线 (outline)"></a>表单轮廓线 (outline)</h3><ul><li><p>去除文本框在被选中时出现的边框</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="防止拖拽文本域 -resize"><a href="# 防止拖拽文本域 -resize" class="headerlink" title="防止拖拽文本域 (resize)"></a>防止拖拽文本域 (resize)</h3><ul><li><p>防止用户在使用的时候改变文本域的大小</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">resize</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>文本域标签最好写在一行上，因为如果换行的话在文本域中的文本默认是在第二行开始的</li></ul><h2 id="vertical-align 属性"><a href="#vertical-align 属性" class="headerlink" title="vertical-align 属性"></a>vertical-align 属性</h2><ul><li><p>目的：设置图片或者表单元素和文字垂直对齐</p></li><li><p>针对行内元素和行内块元素有效</p></li><li><p>属性要写在图片 (表单元素) 上</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline | top | middle | bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">baseline</td><td align="center"><strong>默认值</strong> 快到最底下的一条线</td></tr><tr><td align="center">top</td><td align="center">最顶端</td></tr><tr><td align="center">middle</td><td align="center">中间(图片和文字垂直居中)</td></tr><tr><td align="center">bottom</td><td align="center">最底端</td></tr></tbody></table></li></ul><h3 id="解决图片下面有空白缝隙"><a href="# 解决图片下面有空白缝隙" class="headerlink" title="解决图片下面有空白缝隙"></a>解决图片下面有空白缝隙</h3><ul><li><p>空白缝隙是行内块元素和文字基线对齐产生的(例如 f 或 p)</p></li><li><p>解决方法：</p><ul><li>给图片添加 certical-align 中除了 baseline 属性 (推荐)</li><li>把图片转化为块级元素</li></ul></li></ul><h2 id="溢出文字省略号显示"><a href="# 溢出文字省略号显示" class="headerlink" title="溢出文字省略号显示"></a>溢出文字省略号显示</h2><ul><li><p>属性 white-space</p><ul><li>normal：如果文字显示不开自动换行</li><li>nowrap：不允许自动换行</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">white-space</span>: normal | nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">*   属性 text-overflow</span><br><span class="line">    *   ellipsis 文字溢出的时候用省略号显示</span><br><span class="line"></span><br><span class="line">    &#96;&#96;&#96;css</span><br><span class="line">    div &#123;</span><br><span class="line">      text-overflow: ellipsis;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>​    </p><h3 id="单行文本溢出"><a href="# 单行文本溢出" class="headerlink" title="单行文本溢出"></a>单行文本溢出</h3><ul><li>需要满足三个条件<ol><li>强制一行显示文本 (white-space)</li><li>超出部分隐藏 (overflow)</li><li>文字用省略号代替超出部分 (text-overflow)</li></ol></li></ul><h3 id="多行文本溢出"><a href="# 多行文本溢出" class="headerlink" title="多行文本溢出"></a>多行文本溢出</h3><ul><li><p>兼容性问题，适用于 webkit 浏览器，对 IE 没有作用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="comment">/* 弹性伸缩盒子模型显示 */</span></span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="comment">/* 显示文本的行数 */</span></span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="comment">/* 排列方式为垂直居中 */</span></span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: verical;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>使用时要严格控制盒子大小</p></li><li><p>开发时经常后台来控制字数</p></li></ul><h2 id="布局技巧"><a href="# 布局技巧" class="headerlink" title="布局技巧"></a>布局技巧</h2><h3 id="margin 负值应用"><a href="#margin 负值应用" class="headerlink" title="margin 负值应用"></a>margin 负值应用</h3><ul><li><p>有边框的盒子排列时会出现两个盒子之间的边框加粗的情况</p></li><li><p>给右面的盒子添加 <code>margin-left: -1px;</code> 右面的边框压住左面的边框，从而解决这个问题</p></li><li><p>把鼠标放在其中一个盒子上，盒子边框改变颜色</p></li><li><p>要是按照上面的方法改完的盒子会出现被压住的一边没有办法改变颜色的情况</p></li><li><p>解决方法：</p><ul><li>给要变色的盒子添加相对定位，然后盒子就会压住其他盒子</li><li>如果盒子已经有定位则用 z-index 提高层级</li></ul></li></ul><h3 id="文字围绕浮动元素"><a href="# 文字围绕浮动元素" class="headerlink" title="文字围绕浮动元素"></a>文字围绕浮动元素</h3><ul><li><p>根据浮动不会压住文字的特性，既有图片又有文字只需要在左侧图片添加浮动，在大盒子里面写上文字就可以</p></li><li><p>代码实例：<br><img data-src="https://img-blog.csdnimg.cn/20200219215559343.png" alt="新闻示例"></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">    width: 300px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-color: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.pic</span> &#123;</span></span><br><span class="line">    float: left;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"#"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="行内块元素布局"><a href="# 行内块元素布局" class="headerlink" title="行内块元素布局"></a>行内块元素布局</h3><ul><li><p>使用场景：网页下面的页码栏</p></li><li><p>行内块元素每个元素之间有个小缝隙</p></li><li><p>代码示例：(页码栏)<br><img data-src="https://img-blog.csdnimg.cn/202002192156491.png" alt="页码栏"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">    display: inline-block;</span><br><span class="line">    width: 36px;</span><br><span class="line">    height: 36px;</span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f7f7f7</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 36px;</span><br><span class="line">    text-decoration: none;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> <span class="selector-class">.button</span> &#123;</span></span><br><span class="line">    width: 85px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> <span class="selector-tag">input</span>&#123;</span></span><br><span class="line">    height: 36px;</span><br><span class="line">    width: 45px;</span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">    outline: none;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">    width: 60px;</span><br><span class="line">    height: 36px;</span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f7f7f7</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"button"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"button"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    到第 </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">    页</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span> 确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="CSS 三角强化"><a href="#CSS 三角强化" class="headerlink" title="CSS 三角强化"></a>CSS 三角强化</h3><ul><li>实现效果：</li></ul><p><img data-src="https://img-blog.csdnimg.cn/20200219215836511.png" alt="price 盒子"></p><ul><li><p>代码示范：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* 这一部分是生成三角形 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.trangle</span> &#123;</span></span><br><span class="line">    width: 0;</span><br><span class="line">    height: 0;</span><br><span class="line">    border-top: 100px solid transparent;</span><br><span class="line">    border-right: 50px solid skyblue;</span><br><span class="line">    border-bottom: 0;</span><br><span class="line">    border-left: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="comment">/* 这一部分是生成京东价格标签案例 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.price</span> &#123;</span></span><br><span class="line">    width: 160px;</span><br><span class="line">    height: 24px;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.now-price</span> &#123;</span></span><br><span class="line">    position: relative;</span><br><span class="line"><span class="css">    <span class="selector-tag">right</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    top: 0;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 90px;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-color: red;</span><br><span class="line">    text-align: center;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    font-weight: 700;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="comment">/* 下面制作三角方法更简单 */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.now-price</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 0;</span><br><span class="line">    height: 0;</span><br><span class="line">    border-color: transparent red transparent transparent;</span><br><span class="line">    border-style: solid;</span><br><span class="line">    border-width: 24px 10px 0 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"triangle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"now-orice"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"old-price"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>把上面宽度调大</p></li><li><p>左面和下面的宽度调为零</p></li></ul><h3 id="CSS 初始化"><a href="#CSS 初始化" class="headerlink" title="CSS 初始化"></a>CSS 初始化</h3><ul><li><p>为了消除不同浏览器对 html 的影响</p></li><li><p>京东初始化代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">em</span>,</span><br><span class="line">  <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="comment">/* 清除斜体 */</span></span><br><span class="line">      <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">      <span class="comment">/* 为了兼容低版本浏览器，否则在图片上有链接的话会出现边框(和图片周围文字一个原理) */</span></span><br><span class="line">      <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">button</span> &#123;</span><br><span class="line">      <span class="comment">/* 否则 button 上不会出现小手 */</span></span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#c81623</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">button</span>,</span><br><span class="line">  <span class="selector-tag">input</span> &#123;</span><br><span class="line">      <span class="attribute">font-family</span>: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">"\5B8B\4F53"</span>, sans-serif;</span><br><span class="line">      <span class="comment">/* \5B8B\4F53 的意思是宋体，写汉字的话容易出现乱码 */</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">      <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">"\5B8B\4F53"</span>, sans-serif;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.hide</span>,</span><br><span class="line">  <span class="selector-class">.none</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line">      <span class="comment">/* 隐藏 */</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 清除浮动 */</span></span><br><span class="line">  <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">      <span class="attribute">visibility</span>: hidden;</span><br><span class="line">      <span class="attribute">clear</span>: both;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">"."</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">      *zoom: 1;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104401572" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104401572</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 6</title>
      <link href="/archives/16947ac6.html"/>
      <url>/archives/16947ac6.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 6"><a href="#HTML 与 CSS 学习 6" class="headerlink" title="HTML 与 CSS 学习 6"></a>HTML 与 CSS 学习 6</h1><blockquote><p>这篇文章主要讲了 CSS 的浮动部分，主要是有一个学成在线的案例学习到很多开发时的知识 <br> 案例请移步 <a href="https://blog.csdn.net/weixin_46170034/article/details/104357836" target="_blank" rel="external nofollow noopener noreferrer"> 学成在线案例 </a><br> 这篇笔记是初学者写下的笔记，如有错误，欢迎指正。</p></blockquote><a id="more"></a><h2 id="传统网页布局的三种方式"><a href="# 传统网页布局的三种方式" class="headerlink" title="传统网页布局的三种方式"></a>传统网页布局的三种方式</h2><ul><li>标准流(普通流 / 文档流)：按照默认的方式排列</li><li>浮动流</li><li>定位流</li></ul><h2 id="CSS 浮动"><a href="#CSS 浮动" class="headerlink" title="CSS 浮动"></a>CSS 浮动</h2><ul><li><p>浮动可以改变元素标签的默认排列方式</p></li><li><p>网页布局第一准则：多个块级元素横向排列标准流，多个块级元素纵向排列浮动流</p></li></ul><h3 id="浮动详解"><a href="# 浮动详解" class="headerlink" title="浮动详解"></a>浮动详解</h3><ul><li><p>float 属性创建浮动框，使其移动到一边，直到左边缘或右边缘碰到另一个浮动框的边缘或父元素边缘</p></li><li><p>代码示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float: none | left | right;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">none</td><td align="center">元素不浮动(默认值)ss</td></tr><tr><td align="center">left</td><td align="center">元素向左浮动</td></tr><tr><td align="center">right</td><td align="center">元素向右浮动</td></tr></tbody></table></li></ul><h3 id="浮动特性"><a href="# 浮动特性" class="headerlink" title="浮动特性"></a>浮动特性</h3><ol><li><p>浮动的元素会脱离标准流</p><ul><li>脱离标准流的控制，移动到指定位置 (俗称脱标)</li><li>浮动盒子不会保留原先的位置</li></ul><blockquote><p>浮动是有浮动属性盒子会飘起来，后面没有浮动属性的盒子补上前面飘起来盒子位置</p></blockquote></li><li><p>浮动的元素会一行显示并且元素顶端对齐</p><ul><li>浮动元素会紧紧贴在一起 (不会有空隙)</li><li>如果父元素宽度装不下这些盒子，多出的盒子会另起一行对齐</li></ul><blockquote><p>可以这么理解：浮动的高度都是一样的，所以会并排显示</p></blockquote></li><li><p>浮动元素会具有行内块元素特性</p><ul><li>行内元素添加 float 属性可以设置宽高</li><li>块元素添加 float 属性可以在一行显示</li><li>添加浮动的行内元素和块元素，他的宽度根据内容宽度来确定</li></ul></li></ol><h3 id="约束浮动元素策略"><a href="# 约束浮动元素策略" class="headerlink" title="约束浮动元素策略"></a>约束浮动元素策略</h3><ul><li><p>先用标准流父元素排列上下位置，之后内部子元素浮动来排列左右位置 (网页布局第一准则)</p></li><li><p>网页布局第二准则：先设置盒子大小，在设置盒子位置</p></li></ul><h3 id="浮动布局的注意点"><a href="# 浮动布局的注意点" class="headerlink" title="浮动布局的注意点"></a>浮动布局的注意点</h3><ul><li><p>和浏览器一样宽的盒子不需要指定宽度</p></li><li><p>元素浮动后只会影响后面的标准流，不影响之前的标准流</p></li><li><p>一个元素浮动了，其他的兄弟元素都应该浮动</p></li></ul><h3 id="清除浮动"><a href="# 清除浮动" class="headerlink" title="清除浮动"></a>清除浮动 </h3><h4 id="清除浮动的原因"><a href="# 清除浮动的原因" class="headerlink" title="清除浮动的原因"></a> 清除浮动的原因</h4><ul><li>有些父级盒子不方便给高度(如比较高的盒子，或者盒子高度要随时改变)，但是又不能不给高度(下面的标准流盒子又会占用父级盒子的位置)</li></ul><h4 id="清除浮动的本质"><a href="# 清除浮动的本质" class="headerlink" title="清除浮动的本质"></a>清除浮动的本质</h4><ul><li><p>清除浮动的本质是清除浮动元素对父级元素的影响</p></li><li><p>父盒子有高度，则不需要清除浮动</p></li><li><p>清除浮动以后，父级元素会自动检测盒子的高度，不会影响下面的标准流元素</p></li><li><p>语法规范：</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: left | right | both;</span><br><span class="line">    <span class="comment">/* 清除左浮动，清除右浮动，同时清除 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<br>​    </p><ul><li>在开发时几乎只用<code>clear: both;</code></li></ul><h4 id="清除浮动的方法"><a href="# 清除浮动的方法" class="headerlink" title="清除浮动的方法"></a>清除浮动的方法</h4><ol><li>额外标签法(隔墙法，但平时不常用) <strong>W3C 推荐</strong></li><li>父级添加 overflow 属性</li><li>父级添加 after 伪元素</li><li>给父级添加双伪元素</li></ol><h5 id="额外标签法"><a href="# 额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h5><ul><li><p>在父级盒子后面新建一个盒子(必须是块级元素)</p></li><li><p>在新建盒子里写上属性<code>clear: both;</code></p></li><li><p>发现父元素能自动检测高度，不会影响后面的标准流元素</p></li><li><p>这种写法父盒子本身高度没有增加，而只是在浮动元素后增加一个盒子拦住下面标准流的元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: skyblue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.clear</span> &#123;</span></span><br><span class="line">        clear: both;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>优点：通俗易懂，书写方便</p></li><li><p>缺点：添加许多无意义的标签，结构性较差</p></li></ul><h5 id="给父级添加 overflow"><a href="# 给父级添加 overflow" class="headerlink" title="给父级添加 overflow"></a>给父级添加 overflow</h5><ul><li><p>给父元素添加 overflow 属性</p></li><li><p>这种方法父元素的高度会变得和子元素一样高，但是一旦有超出父元素边界的部分就会被隐藏</p></li><li><p>语法样例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        overflow: hidden;</span><br><span class="line"><span class="css">        <span class="comment">/* 清除浮动 */</span></span></span><br><span class="line">        width: 800px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 400px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>优点：代码简洁</p></li><li><p>缺点：无法显示溢出的部分 (例如 margin 取负值)</p></li></ul><h5 id="after 伪元素法"><a href="#after 伪元素法" class="headerlink" title="after 伪元素法"></a>after 伪元素法</h5><ul><li><p>相当于额外标签法的升级版</p></li><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    <span class="comment">/* I6,I7 专有 */</span></span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>使用：在父元素上添加这个属性</p></li><li><p>例<code>&lt;div class=&quot;nav clearfix&quot;&gt;...&lt;/div&gt;</code></p></li></ul><h5 id="双伪元素清除浮动 - 最常使用"><a href="# 双伪元素清除浮动 - 最常使用" class="headerlink" title="双伪元素清除浮动 (最常使用)"></a>双伪元素清除浮动 (最常使用)</h5><ul><li><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">""</span>;</span><br><span class="line">  <span class="attribute">display</span>:table;</span><br><span class="line">  <span class="comment">/* 如果写 display:block 的话两个块元素就会分行显示，影响父盒子大小 */</span></span><br><span class="line">  <span class="comment">/* table 是表格，转化成块级元素并同行显示 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"> <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">  *zoom:1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用方法和伪元素法一样，在父元素上加上这个属性</p></li></ul><h2 id="PS 切图模式"><a href="#PS 切图模式" class="headerlink" title="PS 切图模式"></a>PS 切图模式</h2><ul><li><p>jpg 像素较高，常用于产品图片</p></li><li><p>图层切图：单击图层，选择快速导出为 PNG</p></li><li><p>如果有多个元素想要导出为图片，合并两个图层(Ctrl+E)，然后导出</p></li><li><p>切片工具切图：</p><ol><li>选中要切的部分</li><li>导出：文件 -&gt; 导出 -&gt; 储存为 Web 所用的格式，储存(储存时要选择选中的切片)</li><li>要导出背景透明的部分，关闭背景的眼睛，储存时选择 png 格式</li></ol></li><li><p>PS 插件切图</p><ul><li>插件名：Cutterman</li><li>导出选中的图层</li></ul></li></ul><h2 id="学成在线案例"><a href="# 学成在线案例" class="headerlink" title="学成在线案例"></a>学成在线案例</h2><blockquote><p>首页文件为 index.html<br>外链样式表 style.css</p></blockquote><h3 id="CSS- 属性书写顺序"><a href="#CSS- 属性书写顺序" class="headerlink" title="CSS 属性书写顺序"></a>CSS 属性书写顺序</h3><ul><li>建议顺序：<ol><li>布局定位样式：display <strong>默认第一个写，关系到元素样式</strong> / position / float / clear / vidibilty</li><li>自身属性：width / height / margin / padding / border / background</li><li>文本属性：color / font / text-decoration / text-align / vertical-align / white-space / break-word</li><li>其他属性(CSS3)：content / cursor / border-radius / box-shadow / texte-shadow /…背景颜色 rgba 要放在这里(rgba 为 css3 的属性)</li></ol></li></ul><h3 id="页面布局思路"><a href="# 页面布局思路" class="headerlink" title="页面布局思路"></a>页面布局思路</h3><ul><li>确定页面的可视区</li><li>分析页面的行模块，在数行模块里的列模块</li><li>每个行模块里面的列元素要用浮动布局，先确定大小再确定位置</li><li>制作 HTML 结构，遵循先有结构，后有样式的原则</li></ul><h4 id="导航栏的实际操作方法"><a href="# 导航栏的实际操作方法" class="headerlink" title="导航栏的实际操作方法"></a>导航栏的实际操作方法</h4><ul><li><p>实际开发中不会直接用 a 标签，而是用 li 里面包含链接的方法</p><ul><li>原因：li 语法更清晰</li><li>如果直接使用 a，搜索引擎会识别为有堆砌关键字的嫌疑，影响网站排名</li></ul></li><li><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">        padding: 0 10px;</span><br><span class="line">        height: 42px;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        line-height: 42px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> 课程 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> 职业规划<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意事项，导航栏外面的盒子不要给宽度，里面内容是多宽外面的盒子就是多宽，方便以后添加文字</p></li><li><p>通常使用 padding 来指定每一个链接模块的宽度，看起来十分整洁</p></li><li><p>button 按钮默认有一个边框，需要手动去除</p></li><li><p>行内块元素中间默认有空隙</p></li><li><p>完整的代码案例在 <a href="https://blog.csdn.net/weixin_46170034/article/details/104357836" target="_blank" rel="external nofollow noopener noreferrer">demo7.html</a> 中</p></li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104357814" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104357814</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 5</title>
      <link href="/archives/8f9d2b7c.html"/>
      <url>/archives/8f9d2b7c.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 5"><a href="#HTML 与 CSS 学习 5" class="headerlink" title="HTML 与 CSS 学习 5"></a>HTML 与 CSS 学习 5</h1><blockquote><p>这篇笔记主要讲了 CSS 盒子模型 (border，padding，margin)，圆角边框，盒子阴影，文字阴影<br> 这篇笔记是初学者写下的笔记，如有错误，欢迎前来指正</p></blockquote><a id="more"></a><h2 id="CSS 盒子模型"><a href="#CSS 盒子模型" class="headerlink" title="CSS 盒子模型"></a>CSS 盒子模型</h2><ul><li>border 边框</li><li>content 内容</li><li>padding 内边距：边框和内容的距离</li><li>margin 外边距：盒子与盒子之间的距离</li><li>在审查元素里的 CSS 部分里的 Computed 里面可以看见这四个属性</li></ul><h3 id="边框 -border"><a href="# 边框 -border" class="headerlink" title="边框 (border)"></a>边框 (border)</h3><ul><li><p>边框复合语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">border: border-width | border-style | border-color;</span><br><span class="line"><span class="comment">/* 没有先后顺序，上面是推荐顺序 */</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">border-width</td><td align="center">边框粗细，单位 px</td></tr><tr><td align="center">border-style</td><td align="center">边框的样式</td></tr><tr><td align="center">border-color</td><td align="center">边框颜色</td></tr></tbody></table></li><li><p>border-style：solid (实线边框) dashed (虚线边框) dotted (点线边框)</p></li><li><p>分别设置四周边框：</p></li></ul><blockquote><p>border-top:<br>border-bottom:</p></blockquote><h4 id="表格细线边框"><a href="# 表格细线边框" class="headerlink" title="表格细线边框"></a>表格细线边框</h4><ul><li><p>table ， td 和 th 都要在 CSS 属性里，所有的部分才都有边框</p></li><li><p>两个单元格都有边框，导致边框变粗</p></li><li><p>解决方法：合并相邻单元格边框</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-collapse</span>: <span class="selector-tag">collapse</span>;</span><br><span class="line"><span class="comment">/* 表示相邻的边框合并在一起 */</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意：边框会影响盒子实际大小</p></li><li><p>实际大小 = 内容宽度 + border 宽度 *2</p></li></ul><h3 id="内边距 -padding"><a href="# 内边距 -padding" class="headerlink" title="内边距 (padding)"></a>内边距 (padding)</h3><ul><li><p>内容跟边框的距离</p></li><li><p>可以通过方位名词来分别设置到四边的距离</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">padding-left</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">padding-top</span>: 20<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="padding 复合属性"><a href="#padding 复合属性" class="headerlink" title="padding 复合属性"></a>padding 复合属性</h4><table><thead><tr><th align="center">值的个数</th><th align="center">属性</th></tr></thead><tbody><tr><td align="center">padding: 5px;</td><td align="center">上下左右都是 5px 的内边距</td></tr><tr><td align="center">padding:5px 10px;</td><td align="center">上下为 5px，左右为 10px</td></tr><tr><td align="center">padding: 5px 10px 20px;</td><td align="center">上内边距是 5px，左右内边距是 10px，下内边距是 20px</td></tr><tr><td align="center">padding: 5px 10px 20px 30px;</td><td align="center">上为 5px，右为 10px，下为 20px，左为 30px <strong>按顺时针顺序</strong></td></tr></tbody></table><ul><li><p>padding 也会影响盒子实际大小</p></li><li><p>注意：子类盒子在没有指定宽度的情况下不会撑大父类盒子</p></li></ul><h3 id="外边距 -magin"><a href="# 外边距 -magin" class="headerlink" title="外边距 (magin)"></a>外边距 (magin)</h3><ul><li><p>盒子和盒子之间的距离</p></li><li><p>同样可以用方位名词来分别声明上下左右的外边距</p></li><li><p><strong>margin 外边距复合属性写法和 padding 一致</strong></p></li></ul><h4 id="margin 应用：块元素水平居中"><a href="#margin 应用：块元素水平居中" class="headerlink" title="margin 应用：块元素水平居中"></a>margin 应用：块元素水平居中</h4><ul><li><p>满足条件：</p><ol><li>盒子必须指定了宽度</li><li>盒子左右外边距都设置为 auto <code>margin: 0 auto;</code></li></ol></li><li><p>注意：无法给行内块元素和行内元素居中对齐</p><ul><li>解决方法，给父元素加属性<code>text-align: center;</code></li></ul></li></ul><h4 id="嵌套块元素塌陷"><a href="# 嵌套块元素塌陷" class="headerlink" title="嵌套块元素塌陷"></a>嵌套块元素塌陷</h4><ul><li><p>两个嵌套关系 (父子关系) 的块元素，父元素有上外边距，子元素也有上外边距，此时父元素会向下较大的外边距值</p></li><li><p>解决方案：</p><ul><li>给父元素一个上边框 (边框颜色透明参数 transparent)</li><li>给父元素定义上内边距</li><li>给父元素添加 <code>overflow: hidden</code> <strong> 常用</strong></li></ul></li><li><p>注意：浮动的盒子不会有外边距塌陷的问题</p></li></ul><h3 id="清除内外边距"><a href="# 清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h3><ul><li><p>网页内容默认携带内外边距</p></li><li><p>代码样例：</p></li></ul><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  *&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">/* 所有的标签都选出来，清楚所有的内外边距 */</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre><ul><li>注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不设置上下内外边距。转换为块元素和行内块元素就可以随意设置</li></ul><h2 id="PS 的基本操作"><a href="#PS 的基本操作" class="headerlink" title="PS 的基本操作"></a>PS 的基本操作</h2><ul><li>Ctrl+R 快速调出标尺 (单位像素)</li><li>按住空格，抓手工具</li><li>Ctrl+D 取消选区</li></ul><h3 id="示例总结"><a href="# 示例总结" class="headerlink" title="示例总结"></a>示例总结</h3><ul><li><p>遇到不知道什么时候用什么的标签</p></li><li><p>遇到产品标题用 h 大量段落用 p</p></li><li><p>盒子和盒子之间用 margin</p></li><li><p>盒子和内容之间用 padding</p></li><li><p>去掉 li 里的圆点<code>list-style: none;</code></p></li></ul><h2 id="圆角边框"><a href="# 圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h2><ul><li><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>: <span class="selector-tag">length</span>;</span><br><span class="line"><span class="comment">/* length 是圆的半径，和矩形的两个边相切 */</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>常用写法：</p></li><li><p>圆形：</p><ul><li>圆角边框设置为正方形边长的一半(可以用百分比表示)</li></ul></li><li><p>圆角矩形：</p><ul><li>圆角边框设置为高度的一半</li></ul></li><li><p>复合属性</p><ul><li>一个参数时四个角都设置相同弧度</li><li>两个参数左上和右下是第一个参数，右上和左下是另一个参数</li><li>有四个参数时按顺时针顺序设置弧度</li></ul></li><li><p>分别设置：</p><ul><li><code>border-top-left-radius</code>左上角</li><li>先上下，后左右</li></ul></li></ul><h2 id="盒子阴影"><a href="# 盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h2><ul><li><p>代码样例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-shadow: h-shadow | v-shadow | blur | spread | color | inset;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">h-shadow</td><td align="center"><strong>必需</strong>，水平阴影的位置，允许负值</td></tr><tr><td align="center">v-shadow</td><td align="center"><strong>必需</strong>，垂直阴影的位置，允许负值</td></tr><tr><td align="center">blur</td><td align="center">模糊距离</td></tr><tr><td align="center">spread</td><td align="center">阴影的尺寸</td></tr><tr><td align="center">color</td><td align="center">阴影的颜色(rgba)</td></tr><tr><td align="center">inset</td><td align="center">将外部阴影 (outset) 改为内部阴影</td></tr></tbody></table></li><li><p>注意：虽然 outside 为外阴影(默认值)，但写的时候不能把 outside 写在阴影属性里面，否则会导致阴影失效</p></li><li><p>阴影不占用空间，不会影响其他盒子</p></li><li><p>任何盒子都可以添加:hover 属性</p></li><li><p>常用阴影：</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>: 0 2<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.2</span>);</span><br></pre></td></tr></table></figure><p>​<br>​    </p><h2 id="文字阴影"><a href="# 文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h2><ul><li><p>代码样例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-shadow: h-shadow | v-shadow | blur | color;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">h-shadow</td><td align="center"><strong>必需</strong>，水平阴影的位置，允许负值</td></tr><tr><td align="center">v-shadow</td><td align="center"><strong>必需</strong>，垂直阴影的位置，允许负值</td></tr><tr><td align="center">bulr</td><td align="center">模糊的距离</td></tr><tr><td align="center">color</td><td align="center">阴影颜色(rgba)</td></tr></tbody></table></li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104283778" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104283778</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《Head First HTML 与 CSS》上</title>
      <link href="/archives/bf6c3536.html"/>
      <url>/archives/bf6c3536.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇笔记主要介绍《Head First HTML 与 CSS》有关 HTML 的部分</p></blockquote><a id="more"></a><h1 id="给网页添加图像"><a href="# 给网页添加图像" class="headerlink" title="给网页添加图像"></a>给网页添加图像 </h1><h2 id="浏览器如何处理图像"><a href="# 浏览器如何处理图像" class="headerlink" title="浏览器如何处理图像"></a> 浏览器如何处理图像</h2><ul><li>浏览器对 <code>&lt;img&gt;</code>元素的处理与其他元素稍有不同。浏览器在页面中显示图像之前，必须先获取这个图像。</li><li>浏览器读取一个 html 文件并显示这个文件，发现其中包含 4 个图像元素需要获取，那么浏览器需要从 web 服务器 <code> 逐个 </code> 得到这些图像，向服务器请求 4 次。</li></ul><img data-src="/archives/bf6c3536/image-20200717175551860.png" class><img data-src="/archives/bf6c3536/image-20200717181835915.png" class><img data-src="/archives/bf6c3536/image-20200717182534223.png" class><img data-src="/archives/bf6c3536/image-20200717182628632.png" class><h2 id="图象是如何工作的"><a href="# 图象是如何工作的" class="headerlink" title="图象是如何工作的"></a>图象是如何工作的</h2><ul><li><code>JPEG</code> 包含多达 1600 万种不同颜色，有损压缩，不支持透明度，文件比较小，不支持动画。</li><li><code>PNG</code>可以表示上百万种不同颜色，分为 PNG-8、PNG-24、PNG-32，无损压缩，允许透明。</li><li><code>GIF</code>最多表示 256 种颜色，无损压缩，支持透明度，不过只允许一种颜色设置为透明，支持动画。</li></ul><h2 id="介绍 -lt-img-gt- 元素"><a href="# 介绍 -lt-img-gt- 元素" class="headerlink" title="介绍 &lt;img&gt; 元素"></a>介绍 <code>&lt;img&gt;</code> 元素</h2><ul><li><p><code>img</code>是内联元素，是一个 void 元素，src 属性制定了在 web 页面上图像文件的位置。</p></li><li><p>src 属性不知用于相对链接，还可以放入 URL。</p></li><li><p>一定要提供 alt 属性，当图像未能显示时，为访问者提供一些指示。</p></li><li><p>width 和 height 属性用来调整图像大小。一般图像宽度小于 800 像素。</p><ul><li><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/drink.gif"</span> <span class="attr">width</span>=<span class="string">"48"</span> <span class="attr">height</span>=<span class="string">"100"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>这两个属性只是为了在浏览器显示图像之前，告诉浏览器图像的大小，以便浏览器更好的布局，若希望改变图像大小的表现，通常用 CSS 实现。</li></ul></li><li><p>可以把 <code>&lt;img&gt;</code> 元素放到 <code>&lt;a&gt;</code> 元素中，把图像当作一个可点击的链接。</p></li></ul><img data-src="/archives/bf6c3536/image-20200719165623919.png" class><h1 id="严格的 HTML"><a href="# 严格的 HTML" class="headerlink" title="严格的 HTML"></a>严格的 HTML</h1><h2 id="HTML 简史"><a href="#HTML 简史" class="headerlink" title="HTML 简史"></a>HTML 简史</h2><img data-src="/archives/bf6c3536/image-20200718152325495.png" class><img data-src="/archives/bf6c3536/image-20200718152513996.png" class><h2 id="HTML- 新的“活标准”"><a href="#HTML- 新的“活标准”" class="headerlink" title="HTML, 新的“活标准”"></a>HTML, 新的“活标准”</h2><ul><li><p>万维网协会 W3C 定义了 HTML 的标准。</p></li><li><p>文档定义类型（doctype）用来告诉浏览器你使用的 HTML 版本</p></li><li><p>HTML5 的 doctype:<code>&lt;!doctype html&gt;</code></p></li><li><p>HTML 不会再有版本 6、7、8，它具有 <code> 向后兼容性</code>，即继续向 HTML 增加新的内容，浏览器会支持这个内容，同时也会继续支持原来的内容。</p></li></ul><h2 id="增加一个 -lt-meta-gt- 指定字符编码"><a href="# 增加一个 -lt-meta-gt- 指定字符编码" class="headerlink" title="增加一个 &lt;meta&gt; 指定字符编码"></a>增加一个 <code>&lt;meta&gt;</code> 指定字符编码</h2><img data-src="/archives/bf6c3536/image-20200718153520917.png" class><ul><li>只能在 <code>&lt;head&gt;</code> 元素中放置 <code>&lt;title&gt;</code> <code>&lt;meta&gt;</code> 和<code>&lt;style&gt;</code>元素</li></ul><img data-src="/archives/bf6c3536/image-20200719165411273.png" class>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
            <tag> 《Head First HTML与CSS》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 3</title>
      <link href="/archives/66fe8e49.html"/>
      <url>/archives/66fe8e49.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 3"><a href="#HTML 与 CSS 学习 3" class="headerlink" title="HTML 与 CSS 学习 3"></a>HTML 与 CSS 学习 3</h1><blockquote><p>这篇笔记主要记了 CSS 的基础语法，选择器，字体属性，文本属性，CSS 三种引入方式 <br> 初学者写下的笔记，如有错误，欢迎大家前来指正。</p></blockquote><a id="more"></a><h2 id="CSS 基础"><a href="#CSS 基础" class="headerlink" title="CSS 基础"></a>CSS 基础</h2><ul><li>CSS 主要来美化网页</li><li>CSS 层叠样式表的简称(标记语言)</li></ul><h3 id="CSS 语法规范"><a href="#CSS 语法规范" class="headerlink" title="CSS 语法规范"></a>CSS 语法规范</h3><ul><li><p>选择器 +{多条声明}</p></li><li><p>注释为<code>/* */</code></p></li><li><p>CSS 要写在 <code>&lt;head&gt;</code> 里的 <code>&lt;style&gt;</code> 标签之中</p></li><li><p>代码示例(以 p 标签为例)：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p &#123;</span><br><span class="line">        color: red;</span><br><span class="line">        font-size: 12px;</span><br><span class="line"><span class="css">        <span class="comment">/* 修改文字大小 */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="CSS 代码风格"><a href="#CSS 代码风格" class="headerlink" title="CSS 代码风格"></a>CSS 代码风格</h3><ul><li><p>样式格式</p><ul><li>紧凑格式: 都写在一行上</li><li>展开格式: 展开书写(主流写法)</li></ul></li><li><p>样式大小写: 默认小写</p></li><li><p>空格规范</p><ul><li>在冒号后面添加一个空格</li><li>选择器和大括号之间保留一个空格</li></ul></li></ul><h3 id="CSS 选择器"><a href="#CSS 选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h3><ul><li>分类：<ul><li>基础选择器<ul><li>标签选择器</li><li>类选择器</li><li>id 选择器</li><li>通配符选择器</li></ul></li><li>复合选择器(在 demo5 里)</li></ul></li></ul><h4 id="标签选择器"><a href="# 标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><ul><li>标签名作为选择器</li><li>优点:<ul><li>可以一次修改所有某一类的标签的样式</li></ul></li><li>缺点:<ul><li>没法区分同名标签内的元素</li></ul></li></ul><h4 id="类选择器"><a href="# 类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><ul><li><p>单独选择一个或几个标签</p></li><li><p>语法样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">. 类名 (class 属性) &#123;</span><br><span class="line">    属性 1: 属性值 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>标签中加 class 属性</p></li><li><p>无视标签，所有有相同 class 属性的都会改变样式</p></li><li><p>不能用标签名做 class 属性</p></li><li><p>有 <a href="https://www.jianshu.com/p/6417143c4b18" target="_blank" rel="external nofollow noopener noreferrer"> 前端命名规范</a></p></li><li><p>css 里的背景颜色<code>background-color</code></p></li></ul><h5 id="类选择器里的多类名"><a href="# 类选择器里的多类名" class="headerlink" title="类选择器里的多类名"></a>类选择器里的多类名</h5><ul><li><p>给一个标签指定多个类名(class)</p></li><li><p>代码示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;red font35&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li><li><p>多个类名中间用空格分开</p></li><li><p>能做到代码复用</p></li></ul><h4 id="id 选择器"><a href="#id 选择器" class="headerlink" title="id 选择器"></a>id 选择器</h4><ul><li><p>语法规范：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#id 名 &#123;</span><br><span class="line">    属性 1: 属性值 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>和类选择器很像，只不过是把 class 改成 id，. 改成 #</p></li><li><p>和类选择器的区别：</p><ul><li>id 只能调用一次，下面的在调用这个 id 就无法使用了</li></ul></li></ul><h4 id="通配符选择器"><a href="# 通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h4><ul><li><p>选取页面中所有的元素(标签)</p></li><li><p>代码示例:</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    * &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line"><span class="comment">/* 把所有的标签都改为红色(包括 html 等标签) */</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    </p></li></ul><h3 id="CSS 字体属性"><a href="#CSS 字体属性" class="headerlink" title="CSS 字体属性"></a>CSS 字体属性 </h3><h4 id="字体"><a href="# 字体" class="headerlink" title="字体"></a> 字体</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"微软雅黑"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Microsoft YaHei"</span>,Arial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以选择多个字体，多个字体用逗号分割</li><li>一个字体有多个单词时尽量用引号</li><li>多个字体的目的，优先使用第一个字体，如果用户电脑上没有这个字体将使用下一个字体</li><li>如果这些字体都没有，使用浏览器自带字体</li><li>chrome 默认字体，微软雅黑</li></ul><h4 id="字体大小"><a href="# 字体大小" class="headerlink" title="字体大小"></a>字体大小</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>后面别忘了加 px(像素)</li><li>chrome 浏览器文字默认大小 16px</li><li>如果给 body 指明了文字大小，整个页面的文字的默认大小就改变了(标题大小不会改变，想要改变的话需要单独指明)</li></ul><h4 id="字体粗细"><a href="# 字体粗细" class="headerlink" title="字体粗细"></a>字体粗细</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal | bold | bolder | lighter | number</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>normal：正常字体，默认值</p></li><li><p>blod：粗体</p></li><li><p>bolder：特粗体</p></li><li><p>lighter：细体</p></li><li><p>number：数字 (后面不要加单位) <strong>开发时常用</strong></p><ul><li>700 加粗(bold)，400 变细(nomal)</li></ul></li><li><p>示例，标题在使用的时候经常去掉加粗</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h2 &#123;</span><br><span class="line">    font-weight: 400;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<br>​    </p><h4 id="文字样式"><a href="# 文字样式" class="headerlink" title="文字样式"></a>文字样式</h4><ul><li><p>主要是斜体</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal | italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>normal：普通样式，italic：斜体样式</li></ul><h4 id="字体复合属性"><a href="# 字体复合属性" class="headerlink" title="字体复合属性"></a>字体复合属性</h4><ul><li><p>示例：文字变倾斜，加粗，字号 16，字体微软雅黑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    font: italic(font-style) 700(font-weight) 16px(font-size/line-hight) 'Microsoft yahei'(fonnt-family);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>注意! 顺序不能更换，里面各属性空格隔开</p></li><li><p>括号内是这个填写的属性</p></li><li><p>不需要的属性可以省略，但必须保留 <code>font-size</code> 和<code>font-family</code>属性，否则 font(整个 css 属性) 都不起作用</p></li></ul><h3 id="CSS 文本属性"><a href="#CSS 文本属性" class="headerlink" title="CSS 文本属性"></a>CSS 文本属性</h3><ul><li>文本外观，颜色，对齐，缩进，行间距</li></ul><h4 id="文本颜色"><a href="# 文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>预定义的值：各种英文单词</li><li>十六进制的值：#ff0000(red) <strong>开发最常用</strong></li><li>RGB 写法：rgb(200,0,0)</li></ul><h4 id="对齐文本"><a href="# 对齐文本" class="headerlink" title="对齐文本"></a>对齐文本</h4><ul><li><p>注：只能设置水平对齐格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text-align: center | left | right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>left：左对齐 (默认值)</p></li><li><p>right：右对齐</p></li><li><p>center：居中对齐</p></li></ul><h4 id="装饰文本"><a href="# 装饰文本" class="headerlink" title="装饰文本"></a>装饰文本</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none | underline | overline | line-through;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>none：默认值，没有装饰</li><li>underline：下划线</li><li>overline：上划线</li><li>line-through：删除线</li></ul><blockquote><p>实例：去除链接的下划线</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文本缩进"><a href="# 文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h4><ul><li><p>文本首行缩进</p></li><li><p>可以取负值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">    text-indent: 20px | 2em;</span><br><span class="line">    &#x2F;* 首行缩进 20px *&#x2F;</span><br><span class="line">    &#x2F;* 2em 是当前 2 个文字大小 *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>单位 em，em 是一个相对单位，相当于当前一个元素的大小 <strong>开发常用</strong></li></ul><h4 id="行间距"><a href="# 行间距" class="headerlink" title="行间距"></a>行间距</h4><ul><li><p>控制行与行之间的距离</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="CSS 的引入方式"><a href="#CSS 的引入方式" class="headerlink" title="CSS 的引入方式"></a>CSS 的引入方式</h3><ul><li>css 有三种样式表<ul><li>行内样式表(行内式)</li><li>内部样式表(嵌入式)</li><li>外部样式表(连接式)</li></ul></li></ul><h4 id="内部样式表"><a href="# 内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h4><ul><li>CSS 代码抽取出来，放到 style 标签中</li><li>理论上 style 可以放到任何地方，但默认放在 head 里</li></ul><h4 id="行内样式表"><a href="# 行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h4><ul><li><p>直接在标签里面加上属性 style 就可以了</p></li><li><p>代码样例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style="color: pink;"&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>style 是标签属性，只能控制当前标签</p></li></ul><h4 id="外部样式表"><a href="# 外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h4><ul><li><p>使用较多的方法</p></li><li><p>在外部单独写一个 css 页面</p></li><li><p>操作步骤</p><ol><li><p>新建一个.css 文件</p></li><li><p>把之前在 style 标签里写的写在 css 文件里</p></li><li><p>在 HTML 页面中在 head 里写 <code>&lt;link&gt;</code> 标签来引入这个页面</p><link rel="stylesheet" herf="css 路径"></li></ol></li></ul><blockquote><p>小知识：<code>&lt;hr&gt;</code>标签，水平线标签 <br>button 标签，生成一个按钮<br> 颜色 #ff00ff，有两两相同的，可以省略为#f0f<br>不能直接给图片居中对齐，要对图片的父标签做居中对齐才有效</p></blockquote><h3 id="chrome 调试工具"><a href="#chrome 调试工具" class="headerlink" title="chrome 调试工具"></a>chrome 调试工具</h3><ul><li>左侧 HTML，右侧 CSS</li><li>CSS 里有黄色感叹号，有可能是属性写错了</li></ul><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104187730" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104187730</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 2</title>
      <link href="/archives/11f9bedf.html"/>
      <url>/archives/11f9bedf.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 2"><a href="#HTML 与 CSS 学习 2" class="headerlink" title="HTML 与 CSS 学习 2"></a>HTML 与 CSS 学习 2</h1><blockquote><p>这篇笔记主要记了 HTML 里的表格标签，列表标签和表单标签</p></blockquote><a id="more"></a><h2 id="表格标签"><a href="# 表格标签" class="headerlink" title="表格标签"></a>表格标签 </h2><p> 基本语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格中的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表头单元格标签</strong></p><ul><li>语法：&lt; th&gt;&lt; /th&gt;</li><li>表格会加粗，内容会居中显示</li><li>表格属性(不常用，经常通过 css 设置)<br><img data-src="https://img-blog.csdnimg.cn/20200628085500984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI2NTUyMg==,size_16,color_FFFFFF,t_70" alt></li><li>表格属性要写到 table 里</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表格结构标签</strong></p><ul><li>thead 表示表头区域 tbody 表示主体部分</li><li>使用方法，用 thead 把头部区域包起来</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span>表格头部区域 <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span> 表格主体部分<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>合并单元格</strong></p><ul><li><strong>跨行合并</strong><ul><li>最上侧单元格为目标单元格，写合并代码</li><li>rowspan=“要合并的单元格的个数”</li></ul></li><li><strong>跨列合并</strong><ul><li>最左侧单元格为目标单元格，写合并代码</li><li>colspan=“要合并的单元格的个数”</li></ul></li></ul><blockquote><p>例 <code>&lt; td colspan= &quot;2&quot;&gt;&lt; /td&gt;</code></p></blockquote><h2 id="列表标签"><a href="# 列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><ul><li>列表是用来布局页面的</li><li>分类：<ul><li>无序列表</li><li>有序列表</li><li>自定义列表</li></ul></li></ul><p><strong>无序列表 </strong><br> 代码格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>&lt; ul&gt; 里只能放 &lt; li&gt; 标签，不允许放其他文字或标签，但 &lt; li&gt; 里可以放任何标签</p></blockquote><p><strong>有序列表 </strong><br> 代码格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意事项和无序列表一致，&lt; ol&gt; 里只允许 &lt; li&gt; 标签</li></ul><p><strong>自定义标签</strong></p><ul><li>说明，围绕着表头来解释说明</li><li>代码说明 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span> 名词 1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词 1 解释 1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词 1 解释 2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>dl 里只能有 &lt; dt&gt; 和 &lt; dd&gt; 一个自定义列表里可以有多个 &lt; dt&gt;</p></blockquote><h2 id="表单标签"><a href="# 表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><ul><li>表单，收集用户信息</li><li>组成：<ul><li>表单域</li><li>表单控件(也叫表单元素)</li><li>提示信息</li></ul></li></ul><h3 id="表单域"><a href="# 表单域" class="headerlink" title="表单域"></a><strong>表单域</strong></h3><ul><li>&lt; form&gt; 会把它范围内的元素提交给服务器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url 地址"</span> <span class="attr">method</span>=<span class="string">"提交方式"</span> <span class="attr">name</span>=<span class="string">"表单域名称"</span>&gt;</span> <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img-blog.csdnimg.cn/20200628091708893.png" alt></p><h3 id="表单元素"><a href="# 表单元素" class="headerlink" title="表单元素"></a><strong>表单元素 </strong></h3><p> 元素种类</p><ul><li>input 输入表单元素</li><li>select 下拉表单元素</li><li>textarea 文本域元素</li></ul><p><strong>input 输入元素</strong></p><ul><li>语法规范<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"属性值"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><code>&lt; input type=&quot; 属性值 &quot;/ &gt;</code> 标签为单标签<br><img data-src="https://img-blog.csdnimg.cn/20200628092324419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI2NTUyMg==,size_16,color_FFFFFF,t_70" alt></li><li>input 的其他属性<br><strong>name 属性:</strong> 单选按钮和复选按钮必须在同一 name 下<br><strong>value 属性:</strong> 在输入框内的默认文字; 往后台发送值; 可以更改按钮里的文字<br><strong>checked 属性:</strong> 针对单选按钮和复选按钮; 当页面打开的时候，默认选中这个按钮; <code>checked=&quot;checked&quot;</code><br><strong>maxlength 属性:</strong> 用户最大填入字符的长度; <code>maxlength=&quot; 长度 &quot;</code></li></ul><p><strong>&lt; label&gt; 标签</strong></p><ul><li>扩大表单元素的点击面积</li><li>双标签, 特征值 (id) 必须和 for 相同</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"man"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"man"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>select 下拉表单元素</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>男 <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span> 女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>机器人<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>select 至少包含一对 option<br>option 里属性 selected=”selected”当前项为默认项</p></blockquote><p><strong>textarea 文本域元素</strong></p><ul><li>写很多很多文字的时候用这个</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span>&gt;</span></span><br><span class="line">  默认显示的内容</span><br><span class="line">  <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104149656" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104149656</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 与 CSS 学习 1</title>
      <link href="/archives/88f0ef65.html"/>
      <url>/archives/88f0ef65.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML 与 CSS 学习 1"><a href="#HTML 与 CSS 学习 1" class="headerlink" title="HTML 与 CSS 学习 1"></a>HTML 与 CSS 学习 1</h1><blockquote><p>学习路径：</p><ul><li>HTML 20%</li><li>CSS3 50%</li><li>H5C3 10% 包括新增的标签</li></ul></blockquote><a id="more"></a><h2 id="各种网页编程语言的功能"><a href="# 各种网页编程语言的功能" class="headerlink" title="各种网页编程语言的功能"></a>各种网页编程语言的功能</h2><ul><li>结构   网页元素整理分类 HTML</li><li>表现   版式，颜色 大小 CSS</li><li>行为   网页交互的编写后端 JS</li></ul><h2 id="HTML 标签"><a href="#HTML 标签" class="headerlink" title="HTML 标签"></a><strong>HTML 标签 </strong></h2><p> 各种标签的讲解</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> <span class="meta">&lt;!DOCTYPE&gt;</span>告诉浏览器使用的 HTML5 版本</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span> lang="当前文档的显示的语言" 中文 "zh-CN"，英语 "en"</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span> charset 规定文档的字符编码</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span> 移动端开发的代码</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>HTML 常用的标签 </strong><br><br><strong> 换行标签 </strong> <code> 单标签</code> &lt; br /&gt; 强制换行(也可以这么写 &lt; br &gt;)</p><blockquote><p>小知识：html 里多个空格只会显示一个空格(回车算一个空格) 段落和换行的区别，段落两行之间会有空隙，换行不会有空隙</p></blockquote><p><strong>文本格式化标签</strong></p><ul><li>加粗   <code>&lt;strong&gt; 加粗标签 &lt;/strong&gt;</code>       <code>&lt;b&gt; 加粗标签 *2&lt;/b &gt;</code>  优先考虑 strong</li><li>斜体 <code>&lt;em&gt; 倾斜标签 &lt;/em&gt;</code>  <code>&lt;i&gt; 倾斜标签 *2&lt;/i&gt;</code> 优先考虑 em</li><li>斜体 <code>&lt;em&gt; 倾斜标签 &lt;/em&gt;</code> <code>&lt;i&gt; 倾斜标签 *2&lt;/i&gt;</code> 优先考虑 em</li><li>下划线 <code>&lt;ins&gt; 下划线标签 &lt;/ins&gt;</code> <code>&lt;u&gt; 下划线标签 *2&lt;/u&gt;</code> 优先使用 ins</li></ul><p><strong>特殊的标签 div 和 span</strong></p><ul><li>div  用来布局的 但是他是单独占一整行</li><li>span  在一行上显示多个 span</li></ul><p><strong>图像标签和路径</strong></p><ul><li><p>图像标签 <code>&lt; img src=&quot; 图像 URL&quot; /&gt;</code>　<code>单标签</code>　同一目录下可以直接用图片名做 url</p></li><li><p>图像标签的参数 (参数之间用空格分开)</p><ul><li>alt 如果图片不能显示用来替换的文字</li><li>height 图片高度</li><li>width 图片宽度</li><li>title 鼠标放到图片上显示的文字</li><li>border 边框宽度 css 设定的情况比较多</li></ul></li></ul><p><strong>路径</strong></p><ul><li><code>相对路径</code> 相对于 html 文件的路径<ul><li>同一级的相对路径 直接写文件名就可</li><li>下一级路径 下一级文件夹名 / 文件名</li><li>上一级路径 …/ 文件名</li></ul></li><li><code>绝对路径</code> 从盘符开始的路径<ul><li>如果找不到的话需要 file 协议(file: 文件路径)</li><li>使用时经常用图片网址作为绝对路<blockquote><p>小知识 相对路径使用的是 /  绝对路径使用的是 \</p></blockquote></li></ul></li></ul><p><strong>超链接标签 a</strong></p><p>超链接语法格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">""</span> <span class="attr">target</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>herf 用于链接目标的地址(必须</li><li>外部链接 两个标签中间作为超链接开关</li><li>内部链接 herf 直接写文件名称就可以(盲猜也是使用相对路径)</li><li>空链接 herf 可以用空链接 用 #代替</li><li>下载链接 如果 herf 里是一个 zip 或文件则默认下载</li><li>各种元素都可以做为超链接</li><li>锚点链接 跳到本页中的某处的链接<ul><li>herf 属性里为’# 名字’的形式</li><li>然后在目标标签里</li></ul></li><li>target 链接页面的打开方式 _self 为默认值在当前页打开 _blank 为在新窗口打开</li></ul><p><strong>注释标签和特殊字符</strong></p><ul><li>注释标签 &lt;!–这就是注释–&gt;</li><li>快捷键 ctrl+/</li><li>常用特殊字符</li></ul><table><thead><tr><th>符号名</th><th>字符代码</th></tr></thead><tbody><tr><td>大于号</td><td>&amp;gt</td></tr><tr><td>小于号</td><td>&amp;lt</td></tr><tr><td>空格</td><td>&amp;nbsp</td></tr></tbody></table><blockquote><p>本文转载自<a href="https://blog.csdn.net/weixin_46170034/article/details/104685465" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_46170034/article/details/104685465</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML与CSS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
